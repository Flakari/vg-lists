{"version":3,"sources":["images/Delete_icon_modal.svg","images/gear.svg","images/Delete_icon_rating.svg","images/Delete_icon.svg","images/Up_arrow.svg","images/Down_arrow.svg","images/Hamburger_icon.svg","images/magnifying-glass.svg","components/Home/Home.js","components/Modal/Modal.js","components/ConfirmationModal/ConfirmationModal.js","components/TextInput/TextInput.js","components/ListModalItem/ListModalItem.js","components/ListModal/ListModal.js","components/Sidebar/Sidebar.js","components/Rating/Rating.js","components/Consoles/Consoles.js","components/ListItem/ListItem.js","components/SearchResult/SearchResult.js","components/SearchResults/SearchResults.js","components/GameListItem/GameListItem.js","components/GameList/GameList.js","components/Searchbar/Searchbar.js","components/Header/Header.js","App.js","index.js"],"names":["module","exports","Home","props","useEffect","changeHighlight","id","lists","map","item","to","linkRoute","key","name","Modal","className","showModal","onClick","hideModal","modalClass","e","stopPropagation","children","ConfirmationModal","message","hide","func","funcArgs","TextInput","showInput","setShowInput","useState","value","setValue","undefined","standardInput","validInput","setValidInput","input","onSubmit","args","preventDefault","inputFunction","type","onChange","target","indexOf","autoFocus","text","withRouter","mergeInputVisible","setMergeInputVisible","mergeOptions","setMergeOptions","mergeSelection","setMergeSelection","showMerge","setShowMerge","mergeClickHandler","tempList","filter","hideMergeConfirmation","optionDisplay","deleteIndex","index","showDelete","copy","contents","moveList","String","document","URL","match","history","push","rename","merge","setShowDelete","setDeleteIndex","showDeleteConfirmation","hideDeleteConfirmation","src","require","alt","add","delete","Sidebar","navigation","setNavigation","showListModal","setShowListModal","linkName","currentPage","length","showSidebar","setShowImages","showImages","Rating","gameRating","setGameRating","hoverValue","setHoverValue","games","hasOwnProperty","rating","clickHandler","number","newGames","JSON","parse","stringify","setGames","addGameInfo","title","date","consoles","image","onMouseEnter","onMouseLeave","Consoles","hasStoredData","setHasStoredData","showWholeList","setShowWholeList","needShortenedList","mapConsolesList","platform","owned","tempGames","tempConsoles","i","addRemoveConsole","splice","ListItem","split","year","month","day","imageStyle","backgroundImage","setBackgroundImage","style","backgroundSize","backgroundPosition","Number","SearchResult","options","setOptions","selection","setSelection","quickAdd","SearchResults","quickAddOptions","setQuickAddOptions","quickAddSelection","setQuickAddSelection","htmlFor","data","itemConsoles","slug","platforms","released","GameListItem","copyInputVisible","setCopyInputVisible","changeArgs","listIndex","gameInfo","copyClickHandler","listName","changeItem","GameList","params","listData","setListData","setInput","fetch","join","then","response","json","setData","results","toggleSearch","catch","err","console","log","placeholder","Header","showSearch","setShowSearch","toggleMobileSearch","setSidebar","defaultLists","checkLocalStorage","storageName","noItem","window","localStorage","getItem","initializeLocalStorageState","defaultValue","App","setCurrentPage","searchData","setSearchData","searchInput","setSearchInput","setLists","setShowSidebar","setItem","setLocalStorageData","lsString","setState","setGamesList","addGameToList","gameName","newLists","gameList","forEach","changeGameListItem","command","newList","filteredList","changingItem","newGameList","moveItem","direction","list","addNewList","trimmedName","trim","listNames","toLowerCase","createNewList","basename","listContents","newName","mergingLists","listIndexToMerge","mergedList","mergedListIndex","combinedContents","Set","changingList","exact","path","gameTitle","render","href","rel","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3ed92e9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Delete_icon_modal.ed50bad7.svg\";","module.exports = __webpack_public_path__ + \"static/media/gear.dc461297.svg\";","module.exports = __webpack_public_path__ + \"static/media/Delete_icon_rating.cbf5b388.svg\";","module.exports = __webpack_public_path__ + \"static/media/Delete_icon.6a12383b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Up_arrow.3494b1fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Down_arrow.08cc8dc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hamburger_icon.54ebc46a.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.f8366a62.svg\";","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.scss';\r\n\r\nconst Home = (props) => {\r\n    useEffect(() => {\r\n        props.changeHighlight('');\r\n    }, [props]);\r\n\r\n    return (\r\n        <div id='home-container'>\r\n            <h2>Add video games to lists!</h2>\r\n            <h3>Your Lists:</h3>\r\n            <ul>\r\n                {props.lists.map(item => {\r\n                    return (\r\n                        <Link to={`/${item.linkRoute}`} key={item.name}>\r\n                            <li>{item.name}</li>\r\n                        </Link>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <hr />\r\n            <p id=\"image-note\"><strong>Note: </strong>Due to the size of images generated by RAWG.io for list tile backgrounds, it is suggested that you turn images off if you're on a mobile device. This option is found in the sidebar menu.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Modal.scss';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className={`modal ${props.showModal ? 'visible' : null}`} onClick={props.hideModal}>\r\n            <div className={`modal-container ${props.modalClass}`} onClick={e => e.stopPropagation()}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './ConfirmationModal.scss';\r\n\r\nconst ConfirmationModal = (props) => {\r\n    return (\r\n        <>\r\n            <p>{props.message}</p>\r\n            <div className='button-container'>\r\n                <button onClick={() => { props.hide(); props.func(props.funcArgs); }}>Yes</button>\r\n                <button onClick={props.hide}>No</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useState } from 'react';\r\n\r\nconst TextInput = (props) => {\r\n    const [showInput, setShowInput] = useState(false);\r\n    const [value, setValue] = useState(props.standardInput !== undefined ? props.standardInput : '');\r\n    const [validInput, setValidInput] = useState(true);\r\n\r\n    const changeHandler = (e) => {\r\n        setValue(e.target.value);\r\n\r\n        if (e.target.value.indexOf('/') !== -1 || e.target.value.indexOf('\\\\') !== -1) {\r\n            setValidInput(false);\r\n        } else {\r\n            setValidInput(true);\r\n        }\r\n    };\r\n\r\n    const submit = (args) => {\r\n        if (!validInput) { return }\r\n\r\n        setShowInput(false);\r\n        setValue('');\r\n\r\n        if (args !== undefined) {\r\n            props.inputFunction(value, args);\r\n        } else {\r\n            props.inputFunction(value);\r\n        }\r\n    }\r\n\r\n    const inputVisibility = () => {\r\n        setShowInput(!showInput);\r\n    };\r\n\r\n    const input = (\r\n        <form onSubmit={e => { e.preventDefault(); submit(props.args); }}>\r\n            <input className={!validInput ? 'invalid' : null} id={props.id} type=\"text\" value={value} onChange={changeHandler} autoFocus></input>\r\n            <input type=\"submit\" value=\"Submit\"></input>\r\n            {validInput ? null : <p className=\"invalid-text\">Invalid Input: Cannot use / or \\ in list name!</p>}\r\n        </form>\r\n    );\r\n    return (\r\n        <div>\r\n            <button onClick={inputVisibility}>{showInput ? 'Cancel' : props.text}</button>\r\n            {showInput ? input : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\r\nimport { withRouter } from 'react-router-dom';\r\nimport TextInput from '../TextInput/TextInput';\r\n\r\nconst ListModalItem = (props) => {\r\n    const [mergeInputVisible, setMergeInputVisible] = useState(false);\r\n    const [mergeOptions, setMergeOptions] = useState([]);\r\n    const [mergeSelection, setMergeSelection] = useState('');\r\n    const [showMerge, setShowMerge] = useState(false);\r\n\r\n    const renameList = (name, index) => {\r\n        if (String(document.URL.match(/[^/]+(?=\\/$|$)/)) === props.lists[index].linkRoute) {\r\n            props.history.push('/');\r\n        }\r\n        props.rename(name, index);\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setMergeSelection(e.target.value);\r\n    };\r\n\r\n    const mergeClickHandler = () => {\r\n        setMergeInputVisible(!mergeInputVisible);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempList = [...props.lists].filter(item => {\r\n            return item.name !== props.name;\r\n        });\r\n        setMergeOptions(tempList.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n        setMergeSelection('---');\r\n    }, [props.lists, props.name]);\r\n\r\n    const hideMergeConfirmation = () => {\r\n        setShowMerge(false);\r\n    };\r\n\r\n    const showMergeConfirmation = () => {\r\n        setShowMerge(mergeSelection !== '---' ? true : false);\r\n    };\r\n\r\n    const optionDisplay = (\r\n        <>\r\n            <select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {mergeOptions}\r\n            </select><br />\r\n            <button onClick={() => { showMergeConfirmation(); mergeClickHandler(); }}>Merge</button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <li key={props.name} className='modal-list-item'>\r\n                <h2>{props.name}</h2>\r\n                <div className=\"list-button-container\">\r\n                    <button onClick={() => { props.deleteIndex(props.index); props.showDelete(); }}>Delete List</button>\r\n                    <TextInput\r\n                        id='list-copy-input'\r\n                        text='Copy List'\r\n                        inputFunction={props.copy}\r\n                        args={props.contents}\r\n                    />\r\n                    <button onClick={() => props.moveList('up', props.index)}>Move Up</button>\r\n                    <button onClick={() => props.moveList('down', props.index)}>Move Down</button>\r\n                    <TextInput\r\n                        id='list-rename-input'\r\n                        text='Rename List'\r\n                        inputFunction={renameList}\r\n                        args={props.index}\r\n                        standardInput={props.name}\r\n                    />\r\n                    <div>\r\n                        <button onClick={mergeClickHandler}>{mergeInputVisible ? 'Cancel' : 'Merge Into'}</button><br />\r\n                        {mergeInputVisible ? optionDisplay : null}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <Modal modalClass={'merge-list'} showModal={showMerge} hideModal={hideMergeConfirmation}>\r\n                <ConfirmationModal\r\n                    message={`Are you sure you want to merge ${props.name} into ${mergeSelection}?`}\r\n                    func={props.merge}\r\n                    funcArgs={[props.index, mergeSelection]}\r\n                    hide={hideMergeConfirmation}\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ListModalItem);\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './ListModal.scss';\r\nimport Modal from '../Modal/Modal';\r\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\r\nimport ListModalItem from '../ListModalItem/ListModalItem';\r\nimport TextInput from '../TextInput/TextInput';\r\n\r\nconst ListModal = (props) => {\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(0);\r\n\r\n    const showDeleteConfirmation = () => {\r\n        setShowDelete(true);\r\n    };\r\n\r\n    const hideDeleteConfirmation = () => {\r\n        setShowDelete(false);\r\n    };\r\n\r\n    const deleteItem = (index) => {\r\n        if (String(document.URL.match(/[^/]+(?=\\/$|$)/)) === props.lists[index].linkRoute) {\r\n            props.history.push('/');\r\n        }\r\n        props.delete(index);\r\n        hideDeleteConfirmation();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>List Manager</h1>\r\n            <p>Add, delete, copy, reorganize, and even rename lists here! Your one stop shop for video game list management!</p>\r\n            <button id=\"close-modal\" onClick={props.hideModal}><img src={require(\"../../images/Delete_icon_modal.svg\")} alt={'Close modal'} /></button>\r\n            <TextInput\r\n                id='add-list'\r\n                text='Add List'\r\n                inputFunction={props.add}\r\n            />\r\n            <ul id='modal-list-container'>\r\n                {props.lists.map(item => {\r\n                    return (\r\n                        <ListModalItem\r\n                            key={item.name}\r\n                            name={item.name}\r\n                            index={item.index}\r\n                            contents={item.contents}\r\n                            moveList={props.moveList}\r\n                            deleteIndex={setDeleteIndex}\r\n                            showDelete={showDeleteConfirmation}\r\n                            copy={props.copy}\r\n                            merge={props.merge}\r\n                            rename={props.rename}\r\n                            lists={props.lists}\r\n                        />\r\n                    );\r\n                })}\r\n            </ul>\r\n            {showDelete ? (\r\n                <Modal modalClass={'delete-list'} showModal={showDelete} hideModal={hideDeleteConfirmation}>\r\n                    <ConfirmationModal\r\n                        message='Are you sure you want to delete this list?'\r\n                        func={deleteItem}\r\n                        funcArgs={deleteIndex}\r\n                        hide={hideDeleteConfirmation}\r\n                    />\r\n                </Modal>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ListModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Sidebar.scss';\r\nimport Modal from '../Modal/Modal';\r\nimport ListModal from '../ListModal/ListModal';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = (props) => {\r\n    const [navigation, setNavigation] = useState([]);\r\n    const [showListModal, setShowListModal] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setShowListModal(true);\r\n    };\r\n\r\n    const hideModal = () => {\r\n        setShowListModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setNavigation(props.lists.map(item => {\r\n            const linkName = item.linkRoute;\r\n            return (\r\n                <Link to={`/${linkName}`} key={item.name} onClick={() => {props.hide(); props.changeHighlight(linkName)}}>\r\n                    <li\r\n                        className={props.currentPage === linkName ? 'active' : null}\r\n                    >\r\n                        {`${item.name} [${item.contents.length}]`}\r\n                    </li>\r\n                </Link>\r\n            );\r\n        }));\r\n    }, [props.lists, props.hide, props.currentPage, props]);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"sidebar\" className={props.showSidebar ? 'visible' : null}>\r\n                <div id=\"manage-lists\" onClick={showModal}>\r\n                    <img src={require('../../images/gear.svg')} alt=\"\" /><p>Manage Lists</p>\r\n                </div>\r\n                <h2>Your Lists:</h2>\r\n                {props.lists.length === 0 ? <p>Add a list to see it here!</p> : \r\n                    <>\r\n                        <nav>\r\n                            <ul>\r\n                                {navigation}\r\n                            </ul>\r\n                        </nav> \r\n                    </>\r\n                }\r\n                <div id=\"show-images\">\r\n                    <p>Toggle Tile Images:</p>\r\n                    <div id=\"toggle\" onClick={() => props.setShowImages(!props.showImages)} className={props.showImages ? 'on' : 'off'}>\r\n                        <button id=\"toggle-button\"></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {showListModal ? (\r\n                <Modal modalClass={'list-modal'} showModal={showListModal} hideModal={hideModal}>\r\n                    <ListModal lists={props.lists} add={props.add} delete={props.delete} copy={props.copy} rename={props.rename} merge={props.merge} moveList={props.moveList} hideModal={hideModal}/>\r\n                </Modal>\r\n            ) : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Rating.scss';\r\n\r\nconst Rating = (props) => {\r\n    const [gameRating, setGameRating] = useState('-');\r\n    const [hoverValue, setHoverValue] = useState(gameRating || 0);\r\n\r\n    useEffect(() => {\r\n        setGameRating(() => {\r\n            if (props.games.hasOwnProperty(props.name)) {\r\n                return props.games[props.name].rating;\r\n            }\r\n        });\r\n\r\n        setHoverValue(() => {\r\n            if (props.games.hasOwnProperty(props.name)) {\r\n                return props.games[props.name].rating;\r\n            }\r\n        });\r\n    }, [props.games, props.name]);\r\n\r\n    const clickHandler = (number) => {\r\n        if (!props.games.hasOwnProperty(props.name)) {\r\n            props.addGameInfo(props.name, props.title, props.date, number, props.consoles, props.image);\r\n        } else {\r\n            const newGames = JSON.parse(JSON.stringify(props.games));\r\n            newGames[props.name].rating = number;\r\n            props.setGames(newGames);\r\n            setGameRating(() => {\r\n                if (props.games.hasOwnProperty(props.name)) {\r\n                    return props.games[props.name].rating;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"overall-rating-container\">\r\n            <div className='rating-container'>\r\n                {[0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5].map(item => {\r\n                    return (\r\n                        <div\r\n                            key={item}\r\n                            className={item % 1 === 0 ? 'full' : 'half'}\r\n                            onMouseEnter={() => setHoverValue(item)}\r\n                            onMouseLeave={() => setHoverValue(gameRating)}\r\n                            onClick={() => clickHandler(item)}\r\n                        >\r\n                            <div\r\n                                className={`rating ${hoverValue >= item && 'rating-hover'}`}\r\n                            ></div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <br />\r\n            <button onClick={() => { clickHandler(0) }}><img src={require('../../images/Delete_icon_rating.svg')} alt=\"Remove Rating\" /></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Consoles.scss';\r\n\r\nconst Consoles = (props) => {\r\n    const [hasStoredData, setHasStoredData] = useState(props.games.hasOwnProperty(props.name));\r\n    const [showWholeList, setShowWholeList] = useState(props.consoles === null ? false : props.consoles.length <= 5);\r\n    const needShortenedList = useState(props.consoles === null ? false : props.consoles.length > 5);\r\n\r\n    useEffect(() => {\r\n        setHasStoredData(props.games.hasOwnProperty(props.name));\r\n    }, [props]);\r\n\r\n    const changeListVisiblity = () => {\r\n        setShowWholeList(!showWholeList);\r\n    };\r\n\r\n    const addRemoveConsole = (index) => {\r\n        const tempGames = JSON.parse(JSON.stringify(props.games));\r\n        if (!hasStoredData) {\r\n            const tempConsoles = [...props.consoles].map((item, i) => {\r\n                return {\r\n                    name: item.platform.name,\r\n                    owned: index === i\r\n                }\r\n            });\r\n            props.addGameInfo(props.name, props.title, props.date, null, tempConsoles, props.image);\r\n            setHasStoredData(true);\r\n        } else {\r\n            tempGames[props.name].consoles[index].owned = !tempGames[props.name].consoles[index].owned;\r\n            props.setGames(tempGames);\r\n        }\r\n    };\r\n\r\n    const mapConsolesList = (item, index) => {\r\n        const platform = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\r\n        return (\r\n            <li\r\n                className={hasStoredData && item.owned ? 'owned' : null}\r\n                onClick={() => addRemoveConsole(index)}\r\n                key={platform}\r\n            >{platform}</li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"consoles-list\">\r\n                {props.consoles === null ? null :\r\n                    (!needShortenedList || (needShortenedList && showWholeList)) ? props.consoles.map(mapConsolesList) :\r\n                        [...props.consoles].splice(0, 5).map(mapConsolesList)}\r\n                {!needShortenedList[0] ? null : <li onClick={changeListVisiblity}>{!showWholeList ? '+' : '-'}</li>}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Consoles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Rating from '../Rating/Rating';\r\nimport Consoles from '../Consoles/Consoles';\r\nimport './ListItem.scss';\r\n\r\nconst ListItem = (props) => {\r\n    const monthName = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const [year, month, day] = props.date !== null ? props.date.split('-') : '';\r\n\r\n    const imageStyle = `linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.4)), url(${props.image})`;\r\n    const defaultStyle = 'linear-gradient(#8b91ae, #45456c)';\r\n\r\n    const [backgroundImage, setBackgroundImage] = useState(props.showImages ? imageStyle : defaultStyle);\r\n\r\n    useEffect(() => {\r\n        props.showImages ? setBackgroundImage(imageStyle) : setBackgroundImage(defaultStyle);\r\n    }, [props.showImages, imageStyle]);\r\n\r\n    const style = {\r\n        backgroundImage: backgroundImage,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 0px'\r\n    }\r\n\r\n    return (\r\n        <li style={style}>\r\n            <div className=\"list-item-header\">\r\n                <div>\r\n                    <h2>{props.title}</h2>\r\n                    <p>{props.date !== null ? `Released: ${monthName[Number(month)]} ${day}, ${year}` : ''}</p>\r\n                </div>\r\n                {props.hasOwnProperty('delete') ? <button onClick={props.delete}><img alt=\"Delete game from list\" src={require('../../images/Delete_icon.svg')}></img></button> : null}\r\n            </div>\r\n            <Rating {...props} />\r\n            <Consoles {...props} />\r\n            {props.children}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nconst SearchResult = (props) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [selection, setSelection] = useState('---');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelection(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOptions(props.lists.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n    }, [props.lists]);\r\n\r\n    return (\r\n        <ListItem {...props}>\r\n            <div className=\"add-container\">\r\n                <div className=\"add\">\r\n                    <select onChange={onChangeHandler}>\r\n                        <option>---</option>\r\n                        {options}\r\n                    </select>\r\n                    <button onClick={() => {props.add(props.name, selection); props.addGameInfo(props.name, props.title, props.date, props.rating, props.consoles, props.image);}}>Add</button>    \r\n                </div>\r\n                <button onClick={() => {props.add(props.name, props.quickAdd); props.addGameInfo(props.name, props.title, props.date, props.rating, props.consoles, props.image);}}>Quick Add</button>\r\n            </div>\r\n        </ListItem>\r\n    );  \r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SearchResult from '../SearchResult/SearchResult';\r\nimport './SearchResults.scss';\r\n\r\nconst SearchResults = (props) => {\r\n\tconst [quickAddOptions, setQuickAddOptions] = useState([]);\r\n\tconst [quickAddSelection, setQuickAddSelection] = useState('---');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setQuickAddSelection(e.target.value);\r\n    };\r\n\r\n\tuseEffect(() => {\r\n        props.changeHighlight('');\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        setQuickAddOptions(props.lists.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n    }, [props.lists]);\r\n\r\n    return (\r\n        <>\r\n\t\t\t<h1>Search</h1>\r\n\t\t\t<label htmlFor=\"quick-add\">Quick Add:</label>\r\n\t\t\t<select id=\"quick-add\" onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {quickAddOptions}\r\n            </select>\r\n            {props.data.length === 0 ? null : (\r\n                <>\r\n                    <ul id=\"search-results\">\r\n\t\t\t\t\t\t{props.data.map(item => {\r\n\t\t\t\t\t\t\tconst itemConsoles = props.games.hasOwnProperty(item.slug) ? props.games[item.slug].consoles : item.platforms;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SearchResult\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\tname={item.slug}\r\n\t\t\t\t\t\t\t\t\ttitle={item.name}\r\n\t\t\t\t\t\t\t\t\tdate={item.released}\r\n\t\t\t\t\t\t\t\t\tconsoles={itemConsoles}\r\n\t\t\t\t\t\t\t\t\tadd={props.add}\r\n\t\t\t\t\t\t\t\t\tlists={props.lists}\r\n\t\t\t\t\t\t\t\t\tgames={props.games}\r\n\t\t\t\t\t\t\t\t\tsetGames={props.setGames}\r\n\t\t\t\t\t\t\t\t\taddGameInfo={props.addGameInfo}\r\n\t\t\t\t\t\t\t\t\timage={item['background_image']}\r\n\t\t\t\t\t\t\t\t\tquickAdd={quickAddSelection}\r\n\t\t\t\t\t\t\t\t\tshowImages={props.showImages}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n                    </ul>\r\n                </>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nconst GameListItem = (props) => {\r\n    const [copyInputVisible, setCopyInputVisible] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [selection, setSelection] = useState('');\r\n    const changeArgs = [props.listIndex, props.index];\r\n    const gameInfo = props.games[props.name];\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelection(e.target.value);\r\n    };\r\n\r\n    const copyClickHandler = () => {\r\n        setCopyInputVisible(!copyInputVisible);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempList = [...props.lists].filter(item => {\r\n            return item.name !== props.listName;\r\n        });\r\n        setOptions(tempList.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n        setSelection('---');\r\n    }, [props.lists, props.listName]);\r\n\r\n    const optionDisplay = (\r\n        <div>\r\n            <select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {options}\r\n            </select>\r\n            <button className=\"add-button\" onClick={() => {props.add(props.name, selection); copyClickHandler();}}>Add</button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <ListItem games={props.games} setGames={props.setGames} name={props.name} title={props.title} date={props.date} rating={props.rating} consoles={props.games[props.name].consoles} image={gameInfo.image} delete={() => { props.changeItem('delete', ...changeArgs); }} showImages={props.showImages} >\r\n            <div className=\"alteration-container\">\r\n                <div className=\"copy\">\r\n                    <button onClick={copyClickHandler}>{!copyInputVisible ? 'Copy To Other List' : 'Cancel'}</button><br />\r\n                    {copyInputVisible ? optionDisplay : null}\r\n                </div>\r\n                <div className=\"move\">\r\n                    <button onClick={() => { props.changeItem('up', ...changeArgs); }}><img src={require('../../images/Up_arrow.svg')} alt=\"Move List Up\"/></button><br />\r\n                    <button onClick={() => { props.changeItem('down', ...changeArgs); }}><img src={require('../../images/Down_arrow.svg')} alt=\"Move List Down\"/></button>\r\n                </div>\r\n            </div> \r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default GameListItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GameListItem from '../GameListItem/GameListItem';\r\n\r\nconst GameList = (props) => {\r\n    const [listData, setListData] = useState(props.lists.filter(item => {\r\n        return item.linkRoute === props.match.params.name;\r\n    })[0]);\r\n\r\n    useEffect(() => {\r\n        setListData(props.lists.filter(item => {\r\n            return item.linkRoute === props.match.params.name;\r\n        })[0]);\r\n    }, [props.match, props.lists]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{listData.name}</h1>\r\n            {listData.contents.length === 0 ? <p>There are no games here! Search for games to start filling this list out!</p> : null}\r\n            <ul id=\"game-list\">\r\n                {[...listData.contents].map(item => {\r\n                    return <GameListItem \r\n                        key={item.name}\r\n                        name={item.name}\r\n                        title={props.games[item.name].name}\r\n                        index={item.index}\r\n                        image={item['background-image']}\r\n                        lists={props.lists}\r\n                        date={props.games[item.name].date}\r\n                        games={props.games}\r\n                        listName={listData.name}\r\n                        listIndex={listData.index}\r\n                        changeItem={props.changeItem}\r\n                        add={props.add}\r\n                        setGames={props.setGames}\r\n                        showImages={props.showImages}\r\n                    />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameList;\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Searchbar = (props) => {\r\n\tconst [input, setInput] = useState('');\r\n\r\n\tconst searchSubmitHandler = () => {\r\n\t\tfetch(`https://api.rawg.io/api/games?key=${process.env.REACT_APP_AUTH_TOKEN}&search=${input.split(' ').join('-')}`, {\r\n\t\t\t\"method\": \"GET\",\r\n\t\t\t\"headers\": {\r\n\t\t\t\t\"User-Agent\": \"https://github.com/Flakari/vg-lists/\"\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tprops.setData(response.results);\r\n\t\t\t\tif (props.hasOwnProperty('toggleSearch')) props.toggleSearch();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\tprops.history.push('/search');\r\n\t}\r\n\r\n\tconst inputChangeHandler = (input) => {\r\n\t\tsetInput(input.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={e => { e.preventDefault(); searchSubmitHandler(); }}>\r\n\t\t\t<input type=\"text\" onChange={inputChangeHandler} value={input} placeholder='Search' />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default withRouter(Searchbar);\r\n","import React, { useState } from 'react';\r\nimport './Header.scss';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const [showSearch, setShowSearch] = useState(false);\r\n\r\n    const toggleMobileSearch = () => {\r\n        setShowSearch(!showSearch);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <button onClick={props.setSidebar}><img src={require(\"../../images/Hamburger_icon.svg\")} alt=\"Toggle Lists\"></img></button>\r\n                <Link to='/'>VG Lists</Link>\r\n                <div id=\"search-container\">\r\n                    <Searchbar setData={props.setData} />\r\n                </div>\r\n                <button onClick={toggleMobileSearch}><img src={require(\"../../images/magnifying-glass.svg\")} alt=\"Search\"></img></button>\r\n            </header>\r\n            <div id=\"mobile-search-container\" className={showSearch ? 'visible': null}>\r\n                <Searchbar setData={props.setData} toggleSearch={toggleMobileSearch}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport GameList from './components/GameList/GameList';\nimport Header from './components/Header/Header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst defaultLists = [\n\t{ name: 'Owned', linkRoute: 'owned', contents: [], index: 0 },\n\t{ name: 'Completed', linkRoute: 'completed', contents: [], index: 1 },\n\t{ name: 'Currently Playing', linkRoute: 'currently-playing', contents: [], index: 2 },\n\t{ name: 'Wishlist', linkRoute: 'wishlist', contents: [], index: 3 },\n\t{ name: 'Backlog', linkRoute: 'backlog', contents: [], index: 4 }\n];\n\nconst checkLocalStorage = (storageName, noItem = false) => {\n\treturn (\n\t\tnoItem ? window.localStorage && !window.localStorage.getItem(storageName) :\n\t\t\twindow.localStorage && window.localStorage.getItem(storageName)\n\t);\n};\n\nconst initializeLocalStorageState = (storageName, defaultValue) => {\n\treturn checkLocalStorage(storageName) ?\n\t\tJSON.parse(window.localStorage.getItem(storageName)) : defaultValue;\n};\n\nconst App = () => {\n\tconst [currentPage, setCurrentPage] = useState(String(document.URL.match(/[^/]+(?=\\/$|$)/)));\n\tconst [searchData, setSearchData] = useState('');\n\tconst [searchInput, setSearchInput] = useState('');\n\tconst [showImages, setShowImages] = useState(initializeLocalStorageState('showImages', true));\n\tconst [lists, setLists] = useState(initializeLocalStorageState('lists', defaultLists));\n\tconst [games, setGames] = useState(initializeLocalStorageState('games', {}));\n\tconst [showSidebar, setShowSidebar] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (checkLocalStorage('lists', true)) {\n\t\t\twindow.localStorage.setItem('lists', JSON.stringify(defaultLists));\n\t\t}\n\n\t\tif (checkLocalStorage('games', true)) {\n\t\t\twindow.localStorage.setItem('games', JSON.stringify([]));\n\t\t}\n\n\t\tif (checkLocalStorage('showImages', true)) {\n\t\t\twindow.localStorage.setItem('showImages', JSON.stringify(true));\n\t\t}\n\t}, []);\n\n\tconst setLocalStorageData = (value, lsString, setState) => {\n\t\tif (checkLocalStorage(lsString)) {\n\t\t\twindow.localStorage.setItem(lsString, JSON.stringify(value));\n\t\t\tsetState(JSON.parse(window.localStorage.getItem(lsString)));\n\t\t} else {\n\t\t\tsetState(value);\n\t\t}\n\t};\n\n\tconst showListImages = (value) => {\n\t\tsetLocalStorageData(value, 'showImages', setShowImages);\n\t};\n\n\tconst setListData = (value) => {\n\t\tsetLocalStorageData(value, 'lists', setLists);\n\t};\n\n\tconst setGamesList = (value) => {\n\t\tsetLocalStorageData(value, 'games', setGames);\n\t};\n\n\tconst setSidebarVisibility = () => {\n\t\tsetShowSidebar(!showSidebar);\n\t};\n\n\tconst hideSidebar = () => {\n\t\tsetShowSidebar(false);\n\t};\n\n\tconst addGameToList = (gameName, listName) => {\n\t\tconst newLists = JSON.parse(JSON.stringify(lists));\n\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tif (newLists[i].name === listName) {\n\t\t\t\tconst gameList = [];\n\t\t\t\tnewLists[i].contents.forEach(item => {\n\t\t\t\t\tgameList.push(item.name);\n\t\t\t\t});\n\n\t\t\t\tif (gameList.indexOf(gameName) === -1) {\n\t\t\t\t\tnewLists[i].contents.push({ name: gameName, index: newLists[i].contents.length });\n\t\t\t\t\tsetListData(newLists);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst addGameInformation = (gameName, gameTitle, date, rating, consoles, image) => {\n\t\tconst newGames = JSON.parse(JSON.stringify(games));\n\t\tconst tempConsoles = [];\n\t\tconsoles.forEach(item => {\n\t\t\tconst name = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\n\t\t\ttempConsoles.push({\n\t\t\t\tname: name,\n\t\t\t\towned: item.hasOwnProperty('owned') ? item.owned : false\n\t\t\t});\n\t\t});\n\n\t\tif (newGames[gameName] === undefined) {\n\t\t\tnewGames[gameName] = {\n\t\t\t\tname: gameTitle,\n\t\t\t\tdate: date,\n\t\t\t\tconsoles: tempConsoles,\n\t\t\t\trating: rating || null,\n\t\t\t\timage: image\n\t\t\t}\n\t\t\tsetGamesList(newGames);\n\t\t}\n\t};\n\n\tconst changeGameListItem = (command, listIndex, index) => {\n\t\tif ((command === 'up' && index === 0) || (command === 'down' && index === lists.length - 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newList = JSON.parse(JSON.stringify(lists));\n\t\tlet filteredList = newList[listIndex];\n\n\t\t// Grabs list item based on index value\n\t\tconst changingItem = filteredList.contents.splice(index, 1)[0];\n\n\t\t// Runs function based on command\n\t\tif (command === 'up' || command === 'down') {\n\t\t\tlet newGameList = moveItem(command, filteredList.contents, changingItem, index);\n\t\t\tfilteredList.contents = newGameList;\n\t\t}\n\n\t\t// Resets index values of game list\n\t\tfor (let i = 0; i < filteredList.contents.length; i++) {\n\t\t\tfilteredList.contents[i].index = i;\n\t\t}\n\t\tnewList[listIndex].contents = filteredList.contents;\n\t\tsetListData(newList);\n\t};\n\n\tconst moveList = (direction, index) => {\n\t\tif ((direction === 'up' && index === 0) || (direction === 'down' && index === lists.length - 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newLists = JSON.parse(JSON.stringify(lists));\n\t\tconst changingList = newLists.splice(index, 1)[0];\n\t\tnewLists = moveItem(direction, newLists, changingList, index);\n\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tnewLists[i].index = i;\n\t\t}\n\t\tsetListData(newLists);\n\t};\n\n\tconst moveItem = (direction, list, item, index) => {\n\t\tif (direction === 'up' && index > 0) {\n\t\t\tlist.splice(index - 1, 0, item);\n\t\t} else if (direction === 'down' && index < list.length) {\n\t\t\tlist.splice(index + 1, 0, item);\n\t\t} else {\n\t\t\tlist.splice(index, 0, item);\n\t\t}\n\t\treturn list;\n\t};\n\n\tconst createNewList = (name, contents) => {\n\t\tconst trimmedName = name.trim();\n\n\t\treturn ({\n\t\t\tname: trimmedName,\n\t\t\tlinkRoute: trimmedName.toLowerCase().split(' ').join('-'),\n\t\t\tcontents: contents || [],\n\t\t\tindex: lists.length\n\t\t});\n\t};\n\n\tconst addNewList = (name, contents) => {\n\t\tconst trimmedName = name.trim();\n\n\t\tif (trimmedName === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst listNames = [];\n\t\tlists.forEach(item => {\n\t\t\tlistNames.push(item.name.toLowerCase());\n\t\t});\n\n\t\tif (listNames.indexOf(trimmedName.toLowerCase()) === -1) {\n\t\t\tconst newLists = [...lists];\n\t\t\tnewLists.push(createNewList(name, contents));\n\t\t\tsetListData(newLists);\n\t\t}\n\t};\n\n\tconst deleteList = (index) => {\n\t\tconst newLists = [...lists];\n\t\tnewLists.splice(index, 1);\n\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tnewLists[i].index = i;\n\t\t}\n\n\t\tsetListData(newLists);\n\t};\n\n\tconst copyList = (name, listContents) => {\n\t\taddNewList(name, listContents);\n\t};\n\n\tconst renameList = (newName, index) => {\n\t\tconst trimmedName = newName.trim();\n\n\t\tif (trimmedName === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newLists = [...lists];\n\n\t\tnewLists[index].name = trimmedName;\n\t\tnewLists[index].linkRoute = trimmedName.toLowerCase().split(' ').join('-');\n\t\tsetListData(newLists);\n\t};\n\n\tconst mergeLists = (mergingLists) => {\n\t\tconst [listIndexToMerge, mergedList] = mergingLists;\n\t\tlet mergedListIndex = 0;\n\t\tlet newLists = JSON.parse(JSON.stringify(lists));\n\t\tlet combinedContents = new Set();\n\n\t\tfor (let list of newLists) {\n\t\t\tif (list.name === mergedList) {\n\t\t\t\tmergedListIndex = list.index;\n\t\t\t}\n\t\t}\n\n\t\tfor (let item of newLists[mergedListIndex].contents) {\n\t\t\tcombinedContents.add(item.name);\n\t\t}\n\n\t\tfor (let item of newLists[listIndexToMerge].contents) {\n\t\t\tcombinedContents.add(item.name);\n\t\t}\n\n\t\tnewLists[mergedListIndex].contents = [...combinedContents].map((item, index) => {\n\t\t\treturn {\n\t\t\t\tname: item,\n\t\t\t\tindex: index\n\t\t\t};\n\t\t});\n\n\t\tsetListData(newLists);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router basename='/vg-lists'>\n\t\t\t\t<Header setData={setSearchData} setSidebar={setSidebarVisibility} />\n\t\t\t\t<Sidebar\n\t\t\t\t\tlists={lists}\n\t\t\t\t\tadd={addNewList}\n\t\t\t\t\tdelete={deleteList}\n\t\t\t\t\tcopy={copyList}\n\t\t\t\t\trename={renameList}\n\t\t\t\t\tmerge={mergeLists}\n\t\t\t\t\tshowSidebar={showSidebar}\n\t\t\t\t\thide={hideSidebar}\n\t\t\t\t\tmoveList={moveList}\n\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\tchangeHighlight={setCurrentPage}\n\t\t\t\t\tshowImages={showImages}\n\t\t\t\t\tsetShowImages={showListImages}\n\t\t\t\t/>\n\t\t\t\t<div id=\"main-container\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Home lists={lists} changeHighlight={setCurrentPage} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/search\">\n\t\t\t\t\t\t\t<SearchResults\n\t\t\t\t\t\t\t\tlists={lists}\n\t\t\t\t\t\t\t\tgames={games}\n\t\t\t\t\t\t\t\tadd={addGameToList}\n\t\t\t\t\t\t\t\tdata={searchData}\n\t\t\t\t\t\t\t\tsetData={setSearchData}\n\t\t\t\t\t\t\t\tsearchInput={searchInput}\n\t\t\t\t\t\t\t\tsetInput={setSearchInput}\n\t\t\t\t\t\t\t\tsetGames={setGamesList}\n\t\t\t\t\t\t\t\taddGameInfo={addGameInformation}\n\t\t\t\t\t\t\t\tchangeHighlight={setCurrentPage}\n\t\t\t\t\t\t\t\tshowImages={showImages}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/:name\"\n\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t<GameList\n\t\t\t\t\t\t\t\t\tchangeItem={changeGameListItem}\n\t\t\t\t\t\t\t\t\tlists={lists}\n\t\t\t\t\t\t\t\t\tadd={addGameToList}\n\t\t\t\t\t\t\t\t\tgames={games}\n\t\t\t\t\t\t\t\t\tsetGames={setGamesList}\n\t\t\t\t\t\t\t\t\tshowImages={showImages}\n\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t<footer>All data gathered from RAWG - <a href=\"https://www.rawg.io\" target=\"_blank\" rel=\"noopener noreferrer\">RAWG.io</a></footer>\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}