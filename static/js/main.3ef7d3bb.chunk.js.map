{"version":3,"sources":["images/Delete_icon.svg","images/Hamburger_icon.svg","images/magnifying-glass.svg","components/Home/Home.js","components/Modal/Modal.js","components/ConfirmationModal/ConfirmationModal.js","components/ListModalItem/ListModalItem.js","components/ListModal/ListModal.js","components/Sidebar/Sidebar.js","components/Rating/Rating.js","components/Consoles/Consoles.js","components/ListItem/ListItem.js","components/SearchResult/SearchResult.js","components/SearchResults/SearchResults.js","components/GameListItem/GameListItem.js","components/GameList/GameList.js","components/Searchbar/Searchbar.js","components/Header/Header.js","App.js","index.js"],"names":["module","exports","Home","props","useEffect","changeHighlight","lists","map","item","key","name","to","linkRoute","Modal","className","showModal","onClick","hideModal","modalClass","e","stopPropagation","children","ConfirmationModal","message","hide","func","funcArgs","withRouter","useState","copyValue","setCopyValue","showCopy","setShowCopy","renameValue","setRenameValue","showRename","setShowRename","mergeInputVisible","setMergeInputVisible","mergeOptions","setMergeOptions","mergeSelection","setMergeSelection","showMerge","setShowMerge","copyInput","onSubmit","preventDefault","copy","contents","id","type","value","onChange","input","target","autoFocus","renameInput","index","String","document","URL","match","history","push","rename","mergeClickHandler","tempList","filter","hideMergeConfirmation","optionDisplay","deleteIndex","showDelete","moveList","merge","addValue","setAddValue","showAdd","setShowAdd","setShowDelete","setDeleteIndex","changeDeleteIndex","showDeleteConfirmation","hideDeleteConfirmation","addInput","add","delete","Sidebar","navigation","setNavigation","showListModal","setShowListModal","linkName","currentPage","length","showSidebar","Rating","gameRating","setGameRating","hoverValue","setHoverValue","games","hasOwnProperty","rating","clickHandler","number","newGames","JSON","parse","stringify","setGames","addGameInfo","title","date","consoles","image","onMouseEnter","onMouseLeave","Consoles","hasStoredData","setHasStoredData","showWholeList","setShowWholeList","needShortenedList","onClickHandler","console","log","tempGames","owned","tempConsoles","i","platform","splice","ListItem","monthName","undefined","split","year","month","day","style","background","backgroundSize","backgroundPosition","Number","alt","src","require","SearchResult","options","setOptions","selection","setSelection","quickAdd","SearchResults","quickAddOptions","setQuickAddOptions","quickAddSelection","setQuickAddSelection","data","itemConsoles","slug","platforms","released","GameListItem","copyInputVisible","setCopyInputVisible","changeArgs","listIndex","gameInfo","copyClickHandler","listName","changeItem","GameList","params","listData","setListData","setInput","join","fetch","then","response","json","results","setData","toggleSearch","catch","err","placeholder","Header","showSearch","setShowSearch","toggleMobileSearch","setSidebar","App","setCurrentPage","searchData","setSearchData","searchInput","setSearchInput","window","localStorage","getItem","setLists","setShowSidebar","setItem","setGamesList","addGameToList","gameName","newLists","gameList","forEach","indexOf","changeGameListItem","command","newList","filteredList","changingItem","newGameList","moveItem","direction","list","addNewList","trimmedName","trim","listNames","toLowerCase","Error","createNewList","basename","listContents","newName","mergingLists","listIndexToMerge","mergedList","mergedListIndex","combinedContents","Set","changingList","exact","path","gameTitle","render","href","rel","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3ef7d3bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Delete_icon.6a12383b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hamburger_icon.54ebc46a.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.f8366a62.svg\";","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n    useEffect(() => {\r\n        props.changeHighlight('');\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>VG Lists</h1>\r\n            <p>Add video games to lists!</p>\r\n            <h2>Your Lists:</h2>\r\n            <ul>\r\n                {props.lists.map(item => {\r\n                    return (\r\n                        <li key={item.name}>\r\n                            <Link to={`/${item.linkRoute}`}>{item.name}</Link>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Modal.scss';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className={`modal ${props.showModal ? 'visible' : null}`} onClick={props.hideModal}>\r\n            <div className={`modal-container ${props.modalClass}`} onClick={e => e.stopPropagation()}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './ConfirmationModal.scss';\r\n\r\nconst ConfirmationModal = (props) => {\r\n    return (\r\n        <>\r\n            <p>{props.message}</p>\r\n            <div className='button-container'>\r\n                <button onClick={() => { props.hide(); props.func(props.funcArgs); }}>Yes</button>\r\n                <button onClick={props.hide}>No</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal'; \r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ListModalItem = (props) => {\r\n    const [copyValue, setCopyValue] = useState('');\r\n    const [showCopy, setShowCopy] = useState(false);\r\n    const [renameValue, setRenameValue] = useState('');\r\n    const [showRename, setShowRename] = useState(false);\r\n    const [mergeInputVisible, setMergeInputVisible] = useState(false);\r\n    const [mergeOptions, setMergeOptions] = useState([]);\r\n    const [mergeSelection, setMergeSelection] = useState('');\r\n    const [showMerge, setShowMerge] = useState(false);\r\n\r\n    const copyChangeHandler = (input) => {\r\n        setCopyValue(input.target.value);\r\n    };\r\n\r\n    const copyVisibility = () => {\r\n        setShowCopy(!showCopy);\r\n    };\r\n\r\n    const renameChangeHandler = (input) => {\r\n        setRenameValue(input.target.value);\r\n    };\r\n\r\n    const renameVisibility = () => {\r\n        setShowRename(!showRename);\r\n    };\r\n\r\n    const renameList = (name, index) => {\r\n        if (String(document.URL.match(/[^/]+(?=\\/$|$)/)) === props.lists[index].linkRoute) {\r\n\t\t    props.history.push('/');\r\n        }\r\n        props.rename(name, index);\r\n    }\r\n\r\n    const copyInput = (\r\n        <form onSubmit={e => { e.preventDefault(); props.copy(copyValue, props.contents); setShowCopy(false); setCopyValue('')}}>\r\n            <input id=\"list-copy-input\" type=\"text\" value={copyValue} onChange={copyChangeHandler} autoFocus></input>\r\n            <input type=\"submit\" value=\"Submit\"></input>\r\n        </form>\r\n    );\r\n\r\n    const renameInput = (\r\n        <form onSubmit={e => { e.preventDefault(); renameList(renameValue, props.index); setShowRename(false); setRenameValue('')}}>\r\n            <input id=\"list-rename-input\" type=\"text\" value={renameValue} onChange={renameChangeHandler} autoFocus></input>\r\n            <input type=\"submit\" value=\"Submit\"></input>\r\n        </form>\r\n    );\r\n\r\n    const onChangeHandler = (e) => {\r\n        setMergeSelection(e.target.value);\r\n    };\r\n\r\n    const mergeClickHandler = () => {\r\n        setMergeInputVisible(!mergeInputVisible);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempList = [...props.lists].filter(item => {\r\n            return item.name !== props.name;\r\n        });\r\n        setMergeOptions(tempList.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n        setMergeSelection('---');\r\n    }, [props.lists, props.name]);\r\n\r\n    const hideMergeConfirmation = () => {\r\n        setShowMerge(false);\r\n    };\r\n\r\n    const showMergeConfirmation = () => {\r\n        setShowMerge(mergeSelection !== '---' ? true : false);\r\n    };\r\n\r\n    const optionDisplay = (\r\n        <>\r\n            <select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {mergeOptions}\r\n            </select>\r\n            <button onClick={() => { showMergeConfirmation(); mergeClickHandler(); }}>Merge</button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <li key={props.name} className='modal-list-item'>\r\n                <div>\r\n                    <h2>{props.name}</h2>\r\n                    <button onClick={() => { props.deleteIndex(props.index); props.showDelete(); }}>Delete List</button>\r\n                    <button onClick={() => props.moveList('up', props.index)}>Move Up</button>\r\n                    <button onClick={() => props.moveList('down', props.index)}>Move Down</button>\r\n                    <button onClick={copyVisibility}>{showCopy ? 'Cancel' : 'Copy List'}</button>\r\n                    {showCopy ? copyInput : null}\r\n                    <button onClick={renameVisibility}>{showRename ? 'Cancel' : 'Rename List'}</button>\r\n                    {showRename ? renameInput : null}\r\n                    <button onClick={mergeClickHandler}>{mergeInputVisible ? 'Cancel' : 'Merge Into'}</button>\r\n                    {mergeInputVisible ? optionDisplay : null}\r\n                </div>\r\n            </li>\r\n            <Modal modalClass={'merge-list'} showModal={showMerge} hideModal={hideMergeConfirmation}>\r\n                <ConfirmationModal\r\n                    message={`Are you sure you want to merge ${props.name} into ${mergeSelection}?`}\r\n                    func={props.merge} \r\n                    funcArgs={[props.index, mergeSelection]}\r\n                    hide={hideMergeConfirmation}\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ListModalItem);\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './ListModal.scss';\r\nimport Modal from '../Modal/Modal';\r\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\r\nimport ListModalItem from '../ListModalItem/ListModalItem';\r\n\r\nconst ListModal = (props) => {\r\n    const [addValue, setAddValue] = useState('');\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(0);\r\n    \r\n    const addChangeHandler = (input) => {\r\n        setAddValue(input.target.value);\r\n    };\r\n\r\n    const addVisibility = () => {\r\n        setShowAdd(!showAdd);\r\n    };\r\n\r\n    const changeDeleteIndex = (index) => {\r\n        setDeleteIndex(index);\r\n    };\r\n\r\n    const showDeleteConfirmation = () => {\r\n        setShowDelete(true);\r\n    };\r\n\r\n    const hideDeleteConfirmation = () => {\r\n        setShowDelete(false);\r\n    };\r\n\r\n    const deleteItem = (index) => {\r\n        if (String(document.URL.match(/[^/]+(?=\\/$|$)/)) === props.lists[index].linkRoute) {\r\n\t\t    props.history.push('/');\r\n        }\r\n        props.delete(index);\r\n        hideDeleteConfirmation();\r\n    };\r\n\r\n    const addInput = (\r\n        <form onSubmit={e => { e.preventDefault(); props.add(addValue); setShowAdd(false); setAddValue('')}}>\r\n            <input id=\"list-input\" type=\"text\" value={addValue} onChange={addChangeHandler} autoFocus></input>\r\n            <input type=\"submit\" value=\"Submit\"></input>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <h1>List Manager</h1>\r\n            <p>Add, delete, copy, reorganize, and even rename lists here! Your one stop shop for video game list management!</p>\r\n            <button onClick={addVisibility}>{showAdd ? 'Cancel' : 'Add List'}</button>\r\n                {showAdd ? addInput : null}\r\n            <ul id='modal-list-container'>\r\n                {props.lists.map(item => {\r\n                    return (\r\n                        <ListModalItem\r\n                            key={item.name}\r\n                            name={item.name}\r\n                            index={item.index}\r\n                            contents={item.contents}\r\n                            moveList={props.moveList}\r\n                            deleteIndex={changeDeleteIndex}\r\n                            showDelete={showDeleteConfirmation}\r\n                            copy={props.copy}\r\n                            merge={props.merge}\r\n                            rename={props.rename}\r\n                            lists={props.lists}\r\n                        />\r\n                    );\r\n                })}\r\n            </ul>\r\n            {showDelete ? (\r\n                <Modal modalClass={'delete-list'} showModal={showDelete} hideModal={hideDeleteConfirmation}>\r\n                    <ConfirmationModal\r\n                        message='Are you sure you want to delete this list?'\r\n                        func={deleteItem} \r\n                        funcArgs={deleteIndex}\r\n                        hide={hideDeleteConfirmation}\r\n                    />\r\n                </Modal>\r\n            ) : null} \r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ListModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Sidebar.scss';\r\nimport Modal from '../Modal/Modal';\r\nimport ListModal from '../ListModal/ListModal';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = (props) => {\r\n    const [navigation, setNavigation] = useState([]);\r\n    const [showListModal, setShowListModal] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setShowListModal(true);\r\n    };\r\n\r\n    const hideModal = () => {\r\n        setShowListModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setNavigation(props.lists.map(item => {\r\n            const linkName = item.linkRoute;\r\n            return (\r\n                <Link to={`/${linkName}`} key={item.name} onClick={() => {props.hide(); props.changeHighlight(linkName)}}>\r\n                    <li\r\n                        className={props.currentPage === linkName ? 'active' : null}\r\n                    >\r\n                        {`${item.name} [${item.contents.length}]`}\r\n                    </li>\r\n                </Link>\r\n            );\r\n        }));\r\n    }, [props.lists, props.hide, props.currentPage, props]);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"sidebar\" className={props.showSidebar ? 'visible' : null}>\r\n                <Link to={'/search'}>Search</Link>\r\n                <button onClick={showModal}>Show Modal</button>\r\n                {props.lists.length === 0 ? <p>Add a list to see it here!</p> : \r\n                    <>\r\n                        <nav>\r\n                            <ul>\r\n                                {navigation}\r\n                            </ul>\r\n                        </nav> \r\n                    </>\r\n                }\r\n            </div>\r\n            {showListModal ? (\r\n                <Modal modalClass={'list-modal'} showModal={showListModal} hideModal={hideModal}>\r\n                    <ListModal lists={props.lists} add={props.add} delete={props.delete} copy={props.copy} rename={props.rename} merge={props.merge} moveList={props.moveList}/>\r\n                </Modal>\r\n            ) : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Rating.scss';\r\n\r\nconst Rating = (props) => {\r\n    const [gameRating, setGameRating] = useState('-');\r\n    const [hoverValue, setHoverValue] = useState(gameRating || 0);\r\n\r\n    useEffect(() => {\r\n        setGameRating(() => {\r\n            if (props.games.hasOwnProperty(props.name)) {\r\n                return props.games[props.name].rating;\r\n            }\r\n        });\r\n\r\n        setHoverValue(() => {\r\n            if (props.games.hasOwnProperty(props.name)) {\r\n                return props.games[props.name].rating;\r\n            }\r\n        });\r\n    }, [props.games, props.name])\r\n    \r\n\r\n    const clickHandler = (number) => {\r\n        if (!props.games.hasOwnProperty(props.name)) {\r\n            props.addGameInfo(props.name, props.title, props.date, number, props.consoles, props.image);\r\n        } else {\r\n            const newGames = JSON.parse(JSON.stringify(props.games));\r\n            newGames[props.name].rating = number;\r\n            props.setGames(newGames);\r\n            setGameRating(() => {\r\n                if (props.games.hasOwnProperty(props.name)) {\r\n                    return props.games[props.name].rating;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p>Rating: {gameRating || '-'}/5</p>\r\n            <div className='rating-container'>\r\n            {[0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5].map(item => {\r\n                return (\r\n                    <div\r\n                        key={item}\r\n                        className={item % 1 === 0 ? 'full' : 'half'}\r\n                        onMouseEnter={() => setHoverValue(item)}\r\n                        onMouseLeave={() => setHoverValue(gameRating)}\r\n                        onClick={() => clickHandler(item)}\r\n                    >\r\n                        <div\r\n                            className={`rating ${hoverValue >= item && 'rating-hover'}`}\r\n                        ></div>\r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <br />\r\n            <button onClick={() => {clickHandler(0)}}>Remove Rating</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Consoles.scss';\r\n\r\nconst Consoles = (props) => {\r\n    const [hasStoredData, setHasStoredData] = useState(props.games.hasOwnProperty(props.name));\r\n    const [showWholeList, setShowWholeList] = useState(props.consoles === null ? false : props.consoles.length <= 5);\r\n    const needShortenedList = useState(props.consoles === null ? false : props.consoles.length > 5);\r\n\r\n    useEffect(() => {\r\n        setHasStoredData(props.games.hasOwnProperty(props.name));\r\n    }, [props]);\r\n\r\n    const changeListVisiblity = () => {\r\n        setShowWholeList(!showWholeList);\r\n    };\r\n\r\n    const onClickHandler = (index) => {\r\n        console.log(props.consoles);\r\n        const tempGames = JSON.parse(JSON.stringify(props.games));\r\n        if (!hasStoredData) {\r\n            const tempConsoles = [...props.consoles].map((item, i) => {\r\n                return {\r\n                    name: item.platform.name,\r\n                    owned: index === i\r\n                }\r\n            });\r\n            props.addGameInfo(props.name, props.title, props.date, null, tempConsoles, props.image);\r\n            setHasStoredData(true);\r\n        } else {\r\n            tempGames[props.name].consoles[index].owned = !tempGames[props.name].consoles[index].owned;\r\n            props.setGames(tempGames);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"consoles-list\">\r\n                {props.consoles === null ? null : (!needShortenedList || (needShortenedList && showWholeList)) ? props.consoles.map((item, index) => {\r\n                    const platform = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\r\n                    return (\r\n                        <li\r\n                            className={hasStoredData && item.owned ? 'owned' : null}\r\n                            onClick={() => onClickHandler(index)}\r\n                            key={platform}\r\n                        >{platform}</li>\r\n                    );\r\n                }) : [...props.consoles].splice(0, 5).map((item, index) => {\r\n                    const platform = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\r\n                    return (\r\n                        <li\r\n                            className={hasStoredData && item.owned ? 'owned' : null}\r\n                            onClick={() => onClickHandler(index)}\r\n                            key={platform}\r\n                        >{platform}</li>\r\n                    );\r\n                })}\r\n                {!needShortenedList[0] ? null : <li onClick={changeListVisiblity}>{!showWholeList ? '+' : '-'}</li>}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Consoles;\r\n","import React from 'react';\r\nimport Rating from '../Rating/Rating';\r\nimport Consoles from '../Consoles/Consoles';\r\nimport './ListItem.scss';\r\n\r\nconst ListItem = (props) => {\r\n    const monthName = [undefined, 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const [year, month, day] = props.date.split('-');\r\n\r\n    const style = {\r\n        background: `linear-gradient(rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.9)), url(${props.image})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 90px'\r\n    }\r\n\r\n    return (\r\n        <li style={style}>\r\n            <div className=\"list-item-header\">\r\n                <div>\r\n                    <h2>{props.title}</h2>\r\n                    <p>{`Released: ${monthName[Number(month)]} ${day}, ${year}`}</p>\r\n                </div>\r\n                {props.hasOwnProperty('delete') ? <button onClick={props.delete}><img alt=\"Delete game from list\" src={require('../../images/Delete_icon.svg')}></img></button> : null}\r\n            </div>\r\n            {props.children}\r\n            <Rating\r\n                games={props.games}\r\n                setGames={props.setGames}\r\n                name={props.name}\r\n                title={props.title}\r\n                date={props.date}\r\n                consoles={props.consoles}\r\n                addGameInfo={props.addGameInfo}\r\n                image={props.image}\r\n            />\r\n            <Consoles\r\n                games={props.games}\r\n                setGames={props.setGames}\r\n                name={props.name}\r\n                title={props.title}\r\n                date={props.date}\r\n                consoles={props.consoles}\r\n                addGameInfo={props.addGameInfo}\r\n                image={props.image}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nconst SearchResult = (props) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [selection, setSelection] = useState('---');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelection(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOptions(props.lists.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n    }, [props.lists]);\r\n\r\n    return (\r\n        <ListItem {...props}>\r\n            <select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {options}\r\n            </select>\r\n            <button onClick={() => {props.add(props.name, selection); props.addGameInfo(props.name, props.title, props.date, props.rating, props.consoles, props.image);}}>Add</button>\r\n            <button onClick={() => {props.add(props.name, props.quickAdd); props.addGameInfo(props.name, props.title, props.date, props.rating, props.consoles, props.image);}}>Quick Add</button>\r\n        </ListItem>\r\n    );  \r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SearchResult from '../SearchResult/SearchResult';\r\n\r\nconst SearchResults = (props) => {\r\n\tconst [quickAddOptions, setQuickAddOptions] = useState([]);\r\n\tconst [quickAddSelection, setQuickAddSelection] = useState('---');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setQuickAddSelection(e.target.value);\r\n    };\r\n\r\n\tuseEffect(() => {\r\n        props.changeHighlight('');\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        setQuickAddOptions(props.lists.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n    }, [props.lists]);\r\n\r\n    return (\r\n        <>\r\n\t\t\t<p>Quick Add:</p>\r\n\t\t\t<select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {quickAddOptions}\r\n            </select>\r\n            {props.data.length === 0 ? null : (\r\n                <>\r\n                    <ul id=\"search-results\">\r\n\t\t\t\t\t\t{props.data.map(item => {\r\n\t\t\t\t\t\t\tconst itemConsoles = props.games.hasOwnProperty(item.slug) ? props.games[item.slug].consoles : item.platforms;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SearchResult\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\tname={item.slug}\r\n\t\t\t\t\t\t\t\t\ttitle={item.name}\r\n\t\t\t\t\t\t\t\t\tdate={item.released}\r\n\t\t\t\t\t\t\t\t\tconsoles={itemConsoles}\r\n\t\t\t\t\t\t\t\t\tadd={props.add}\r\n\t\t\t\t\t\t\t\t\tlists={props.lists}\r\n\t\t\t\t\t\t\t\t\tgames={props.games}\r\n\t\t\t\t\t\t\t\t\tsetGames={props.setGames}\r\n\t\t\t\t\t\t\t\t\taddGameInfo={props.addGameInfo}\r\n\t\t\t\t\t\t\t\t\timage={item['background_image']}\r\n\t\t\t\t\t\t\t\t\tquickAdd={quickAddSelection}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n                    </ul>\r\n                </>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nconst GameListItem = (props) => {\r\n    const [copyInputVisible, setCopyInputVisible] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [selection, setSelection] = useState('');\r\n    const changeArgs = [props.listIndex, props.index];\r\n    const gameInfo = props.games[props.name];\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelection(e.target.value);\r\n    };\r\n\r\n    const copyClickHandler = () => {\r\n        setCopyInputVisible(!copyInputVisible);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempList = [...props.lists].filter(item => {\r\n            return item.name !== props.listName;\r\n        });\r\n        setOptions(tempList.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n        setSelection('---');\r\n    }, [props.lists, props.listName]);\r\n\r\n    const optionDisplay = (\r\n        <>\r\n            <select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {options}\r\n            </select>\r\n            <button onClick={() => {props.add(props.name, selection); copyClickHandler();}}>Add</button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <ListItem games={props.games} setGames={props.setGames} name={props.name} title={props.title} date={props.date} rating={props.rating} consoles={props.games[props.name].consoles} image={gameInfo.image} delete={() => { props.changeItem('delete', ...changeArgs); }}>   \r\n            \r\n            <button onClick={() => { props.changeItem('up', ...changeArgs); }}>Move Up</button><br />\r\n            <button onClick={() => { props.changeItem('down', ...changeArgs); }}>Move Down</button><br />\r\n            <button onClick={copyClickHandler}>{!copyInputVisible ? 'Copy To Other List' : 'Cancel'}</button>\r\n            {copyInputVisible ? optionDisplay : null}\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default GameListItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GameListItem from '../GameListItem/GameListItem';\r\n\r\nconst GameList = (props) => {\r\n    const [listData, setListData] = useState(props.lists.filter(item => {\r\n        return item.linkRoute === props.match.params.name;\r\n    })[0]);\r\n\r\n    useEffect(() => {\r\n        console.log(props.match);\r\n        setListData(props.lists.filter(item => {\r\n            return item.linkRoute === props.match.params.name;\r\n        })[0]);\r\n    }, [props.match, props.lists]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{listData.name}</h1>\r\n            {listData.contents.length === 0 ? <p>There are no games here! Search for games to start filling this list out!</p> : null}\r\n            <ul id=\"game-list\">\r\n                {[...listData.contents].map(item => {\r\n                    return <GameListItem \r\n                        key={item.name}\r\n                        name={item.name}\r\n                        title={props.games[item.name].name}\r\n                        index={item.index}\r\n                        image={item['background-image']}\r\n                        lists={props.lists}\r\n                        date={props.games[item.name].date}\r\n                        games={props.games}\r\n                        listName={listData.name}\r\n                        listIndex={listData.index}\r\n                        changeItem={props.changeItem}\r\n                        add={props.add}\r\n                        setGames={props.setGames}\r\n                    />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameList;\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Searchbar = (props) => {\r\n    const [input, setInput] = useState('');\r\n\r\n    const searchSubmitHandler = () => {\r\n\t\tconsole.log(input.split(' ').join('-'));\r\n\t\tfetch(`https://api.rawg.io/api/games?search=${input.split(' ').join('-')}`, {\r\n\t\t\t\t\"method\": \"GET\",\r\n\t\t\t\t\"headers\": {\r\n\t\t\t\t\"User-Agent\": \"https://github.com/Flakari/vg-lists/\"\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(response => {\r\n\t\t\treturn response;\r\n\t\t})\r\n\t\t.then(response => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(response => {\r\n\t\t\tconsole.log(response.results);\r\n\t\t\tprops.setData(response.results);\r\n\t\t\tif (props.hasOwnProperty('toggleSearch')) props.toggleSearch();\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\t\tprops.history.push('/search');\r\n    }\r\n    \r\n    const inputChangeHandler = (input) => {\r\n\t\tsetInput(input.target.value);\r\n\t}\r\n\r\n    return (\r\n        <form onSubmit={e => { e.preventDefault(); searchSubmitHandler(); }}>\r\n            <input type=\"text\" onChange={inputChangeHandler} value={input} placeholder='Search'/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default withRouter(Searchbar);\r\n","import React, { useState } from 'react';\r\nimport './Header.scss';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const [showSearch, setShowSearch] = useState(false);\r\n\r\n    const toggleMobileSearch = () => {\r\n        setShowSearch(!showSearch);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <button onClick={props.setSidebar}><img src={require(\"../../images/Hamburger_icon.svg\")} alt=\"Toggle Lists\"></img></button>\r\n                <Link to='/'>VG Lists</Link>\r\n                <div id=\"search-container\">\r\n                    <Searchbar setData={props.setData} />\r\n                </div>\r\n                <button onClick={toggleMobileSearch}><img src={require(\"../../images/magnifying-glass.svg\")} alt=\"Search\"></img></button>\r\n            </header>\r\n            <div id=\"mobile-search-container\" className={showSearch ? 'visible': null}>\r\n                <Searchbar setData={props.setData} toggleSearch={toggleMobileSearch}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport GameList from './components/GameList/GameList';\nimport Header from './components/Header/Header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n\tconst [currentPage, setCurrentPage] = useState(String(document.URL.match(/[^/]+(?=\\/$|$)/)));\n\tconst [searchData, setSearchData] = useState('');\n\tconst [searchInput, setSearchInput] = useState('');\n  \tconst [lists, setLists] = useState(\n\t\twindow.localStorage && window.localStorage.getItem('lists') ? \n\t\tJSON.parse(window.localStorage.getItem('lists')) : [\n\t\t\t{ name: 'Owned', linkRoute: 'owned', contents: [], index: 0 },\n\t\t\t{ name: 'Completed', linkRoute: 'completed', contents: [], index: 1 },\n\t\t\t{ name: 'Currently Playing', linkRoute: 'currently-playing', contents: [], index: 2 },\n\t\t\t{ name: 'Wishlist', linkRoute: 'wishlist', contents: [], index: 3 },\n\t\t\t{ name: 'Backlog', linkRoute: 'backlog', contents: [], index: 4 }\n\t\t]);\n\tconst [games, setGames] = useState(\n\t\twindow.localStorage && window.localStorage.getItem('games') ? \n\t\tJSON.parse(window.localStorage.getItem('games')) : {});\n\tconst [showSidebar, setShowSidebar] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (window.localStorage && !window.localStorage.getItem('lists')) {\n\t\t\twindow.localStorage.setItem('lists', JSON.stringify([\n\t\t\t\t{ name: 'Owned', linkRoute: 'owned', contents: [], index: 0 },\n\t\t\t\t{ name: 'Completed', linkRoute: 'completed', contents: [], index: 1 },\n\t\t\t\t{ name: 'Currently Playing', linkRoute: 'currently-playing', contents: [], index: 2 },\n\t\t\t\t{ name: 'Wishlist', linkRoute: 'wishlist', contents: [], index: 3 },\n\t\t\t\t{ name: 'Backlog', linkRoute: 'backlog', contents: [], index: 4 }\n\t\t\t]));\n\t\t}\n\t\t\n\t\tif (window.localStorage && !window.localStorage.getItem('games')) {\n\t\t\twindow.localStorage.setItem('games', JSON.stringify([]));\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconsole.log(games);\n\t}, [games]);\n\n\tuseEffect(() => {\n\t\tconsole.log(lists);\n\t}, [lists]);\n\n\tconst changeHighlight = (value) => {\n        setCurrentPage(value);\n    }\n\n\tconst setListData = (lists) => {\n\t\tif (window.localStorage && window.localStorage.getItem('lists')) {\n\t\t\twindow.localStorage.setItem('lists', JSON.stringify(lists));\n\t\t\tsetLists(JSON.parse(window.localStorage.getItem('lists')));\n\t\t} else {\n\t\t\tsetLists(lists);\n\t\t}\n\t};\n\n\tconst setData = (data) => {\n    \tsetSearchData(data);\n    };\n\n\tconst setInput = (input) => {\n\t\tsetSearchInput(input);\n\t};\n\n\tconst setGamesList = (games) => {\n\t\tif (window.localStorage && window.localStorage.getItem('games')) {\n\t\t\twindow.localStorage.setItem('games', JSON.stringify(games));\n\t\t\tsetGames(JSON.parse(window.localStorage.getItem('games')));\n\t\t} else {\n\t\t\tsetGames(games);\n\t\t}\n\t};\n\n\tconst setSidebarVisibility = () => {\n\t\tsetShowSidebar(!showSidebar);\n\t};\n\n\tconst hideSidebar = () => {\n\t\tsetShowSidebar(false);\n\t};\n\n\tconst addGameToList = (gameName, listName) => {\n\t\tconst newLists = JSON.parse(JSON.stringify(lists));\n\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tif (newLists[i].name === listName) {\n\t\t\t\tconst gameList = [];\n\t\t\t\tnewLists[i].contents.forEach(item => {\n\t\t\t\t\tgameList.push(item.name);\n\t\t\t\t});\n\n\t\t\t\tif (gameList.indexOf(gameName) === -1) {\n\t\t\t\t\tnewLists[i].contents.push({name: gameName, index: newLists[i].contents.length});\n\t\t\t\t\tsetListData(newLists);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t};\n\n\tconst addGameInformation = (gameName, gameTitle, date, rating, consoles, image) => {\n\t\tconst newGames = JSON.parse(JSON.stringify(games));\n\t\tconst tempConsoles = [];\n\t\tconsoles.forEach(item => {\n\t\t\tconst name = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\n\t\t\ttempConsoles.push({\n\t\t\t\tname: name,\n\t\t\t\towned: item.hasOwnProperty('owned') ? item.owned : false\n\t\t\t});\n\t\t});\n\t\t\n\t\tif (newGames[gameName] === undefined) {\n\t\t\tnewGames[gameName] = {\n\t\t\t\tname: gameTitle,\n\t\t\t\tdate: date,\n\t\t\t\tconsoles: tempConsoles,\n\t\t\t\trating: rating || null,\n\t\t\t\timage: image\n\t\t\t}\n\t\t\tsetGamesList(newGames);\n\t\t}\n\t};\n\n\tconst changeGameListItem = (command, listIndex, index) => {\n\t\tif ((command === 'up' && index === 0) || (command === 'down' && index === lists.length - 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newList = JSON.parse(JSON.stringify(lists));\n\t\tlet filteredList = newList[listIndex];\n\n\t\t// Grabs list item based on index value\n\t\tconst changingItem = filteredList.contents.splice(index, 1)[0];\n\n\t\t// Runs function based on command\n\t\tif (command === 'up' || command === 'down') {\n\t\t\tlet newGameList = moveItem(command, filteredList.contents, changingItem, index);\n\t\t\tfilteredList.contents = newGameList;\n\t\t}\n\n\t\t// Resets index values of game list\n\t\tfor (let i = 0; i < filteredList.contents.length; i++) {\n\t\t\tfilteredList.contents[i].index = i;\n\t\t}\n\t\tnewList[listIndex].contents = filteredList.contents;\n\t\tsetListData(newList);\n\t};\n\n\tconst moveList = (direction, index) => {\n\t\tif ((direction === 'up' && index === 0) || (direction === 'down' && index === lists.length - 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newLists = JSON.parse(JSON.stringify(lists));\n\t\tconst changingList = newLists.splice(index, 1)[0];\n\t\tnewLists = moveItem(direction, newLists, changingList, index);\n\t\t\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tnewLists[i].index = i;\n\t\t}\n\t\tsetListData(newLists);\n\t};\n\t\n\tconst moveItem = (direction, list, item, index) => {\n\t\tif (direction === 'up' && index > 0) {\n\t\t\tlist.splice(index - 1, 0, item);\n\t\t} else if (direction === 'down' && index < list.length) {\n\t\t\tlist.splice(index + 1, 0, item);\n\t\t} else {\n\t\t\tlist.splice(index, 0, item);\n\t\t}\n\t\treturn list;\n\t};\n\n\tconst createNewList = (name, contents) => {\n\t\tconst trimmedName = name.trim();\n\n\t\tif (trimmedName.indexOf('/') !== -1 || trimmedName.indexOf('\\\\') !== -1) {\n\t\t\tthrow new Error('Name cannot include forward or backwards slashes (\"/\") (\"\\\\\")');\n\t\t}\n\n\t\treturn ({\n\t\t\tname: trimmedName,\n\t\t\tlinkRoute: trimmedName.toLowerCase().split(' ').join('-'),\n\t\t\tcontents: contents || [],\n\t\t\tindex: lists.length\n\t\t});\n\t};\n\n\tconst addNewList = (name, contents) => {\n\t\tconst trimmedName = name.trim();\n\n\t\tif (trimmedName === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst listNames = [];\n\t\tlists.forEach(item => {\n\t\t\tlistNames.push(item.name.toLowerCase());\n\t\t});\n\n\t\tif (listNames.indexOf(trimmedName.toLowerCase()) === -1) {\n\t\t\tconst newLists = [...lists];\n\t\t\tnewLists.push(createNewList(name, contents));\n\t\t\tsetListData(newLists);\n\t\t}\n\t};\n\n\tconst deleteList = (index) => {\n\t\tconst newLists = [...lists];\n\t\tnewLists.splice(index, 1);\n\t\t\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tnewLists[i].index = i;\n\t\t}\n\n\t\tsetListData(newLists);\n\t};\n\n\tconst copyList = (name, listContents) => {\n\t\taddNewList(name, listContents);\n\t};\n\n\tconst renameList = (newName, index) => {\n\t\tconst trimmedName = newName.trim();\n\n\t\tif (trimmedName === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (trimmedName.indexOf('/') !== -1 || trimmedName.indexOf('\\\\') !== -1) {\n\t\t\tthrow new Error('Name cannot include forward or backwards slashes (\"/\") (\"\\\\\")');\n\t\t}\n\n\t\tconst newLists = [...lists];\n\n\t\tnewLists[index].name = trimmedName;\n\t\tnewLists[index].linkRoute = trimmedName.toLowerCase().split(' ').join('-');\n\t\tsetListData(newLists);\n\t};\n\n\tconst mergeLists = (mergingLists) => {\n\t\tconst [listIndexToMerge, mergedList] = mergingLists;\n\t\tlet mergedListIndex = 0;\n\t\tlet newLists = JSON.parse(JSON.stringify(lists));\n\t\tlet combinedContents = new Set();\n\n\t\tfor (let list of newLists) {\n\t\t\tif (list.name === mergedList) {\n\t\t\t\tmergedListIndex = list.index;\n\t\t\t}\n\t\t}\n\n\t\tfor (let item of newLists[mergedListIndex].contents) {\n\t\t\tcombinedContents.add(item.name);\n\t\t}\n\n\t\tfor (let item of newLists[listIndexToMerge].contents) {\n\t\t\tcombinedContents.add(item.name);\n\t\t}\n\n\t\tnewLists[mergedListIndex].contents = [...combinedContents].map((item, index) => {\n\t\t\treturn {\n\t\t\t\tname: item,\n\t\t\t\tindex: index\n\t\t\t};\n\t\t});\n\n\t\tsetListData(newLists);\n\t};\n\n  \treturn (\n    \t<div className=\"App\">\n\t\t\t<Router basename='/vg-lists'>\n\t\t\t\t<Header setData={setData} setSidebar={setSidebarVisibility}/>\n\t\t\t\t<Sidebar lists={lists} add={addNewList} delete={deleteList} copy={copyList} rename={renameList} merge={mergeLists} showSidebar={showSidebar} hide={hideSidebar} moveList={moveList} currentPage={currentPage} changeHighlight={changeHighlight}/>\n\t\t\t\t<div id=\"main-container\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Home lists={lists} changeHighlight={changeHighlight}/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/search\">\n\t\t\t\t\t\t\t<SearchResults \n\t\t\t\t\t\t\t\tlists={lists}\n\t\t\t\t\t\t\t\tgames={games}\n\t\t\t\t\t\t\t\tadd={addGameToList} \n\t\t\t\t\t\t\t\tdata={searchData} \n\t\t\t\t\t\t\t\tsetData={setData}\n\t\t\t\t\t\t\t\tsearchInput={searchInput}\n\t\t\t\t\t\t\t\tsetInput={setInput}\n\t\t\t\t\t\t\t\tsetGames={setGamesList}\n\t\t\t\t\t\t\t\taddGameInfo={addGameInformation}\n\t\t\t\t\t\t\t\tchangeHighlight={changeHighlight}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/:name\" render={(props) => <GameList changeItem={changeGameListItem} lists={lists} add={addGameToList} games={games} setGames={setGamesList} {...props} />} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t<footer>All data gathered from RAWG - <a href=\"https://www.rawg.io\" target=\"_blank\" rel=\"noopener noreferrer\">RAWG.io</a></footer>\n\t\t\t</Router>\n    \t</div>\n  \t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}