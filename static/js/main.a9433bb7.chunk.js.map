{"version":3,"sources":["images/Delete_icon_modal.svg","images/gear.svg","images/Delete_icon_rating.svg","images/Delete_icon.svg","images/Up_arrow.svg","images/Down_arrow.svg","images/Hamburger_icon.svg","images/magnifying-glass.svg","components/Home/Home.js","components/Modal/Modal.js","components/ConfirmationModal/ConfirmationModal.js","components/TextInput/TextInput.js","components/ListModalItem/ListModalItem.js","components/ListModal/ListModal.js","components/Sidebar/Sidebar.js","components/Rating/Rating.js","components/Consoles/Consoles.js","components/ListItem/ListItem.js","components/SearchResult/SearchResult.js","components/SearchResults/SearchResults.js","components/GameListItem/GameListItem.js","components/GameList/GameList.js","components/Searchbar/Searchbar.js","components/Header/Header.js","App.js","index.js"],"names":["module","exports","Home","props","useEffect","changeHighlight","id","lists","map","item","to","linkRoute","key","name","Modal","className","showModal","onClick","hideModal","modalClass","e","stopPropagation","children","ConfirmationModal","message","hide","func","funcArgs","TextInput","useState","showInput","setShowInput","undefined","standardInput","value","setValue","validInput","setValidInput","input","onSubmit","args","preventDefault","inputFunction","type","onChange","target","indexOf","autoFocus","class","text","withRouter","mergeInputVisible","setMergeInputVisible","mergeOptions","setMergeOptions","mergeSelection","setMergeSelection","showMerge","setShowMerge","mergeClickHandler","tempList","filter","hideMergeConfirmation","optionDisplay","deleteIndex","index","showDelete","moveList","copy","contents","String","document","URL","match","history","push","rename","merge","setShowDelete","setDeleteIndex","changeDeleteIndex","showDeleteConfirmation","hideDeleteConfirmation","src","require","alt","add","delete","Sidebar","navigation","setNavigation","showListModal","setShowListModal","linkName","currentPage","length","showSidebar","setShowImages","showImages","Rating","gameRating","setGameRating","hoverValue","setHoverValue","games","hasOwnProperty","rating","clickHandler","number","newGames","JSON","parse","stringify","setGames","addGameInfo","title","date","consoles","image","onMouseEnter","onMouseLeave","Consoles","hasStoredData","setHasStoredData","showWholeList","setShowWholeList","needShortenedList","onClickHandler","console","log","tempGames","owned","tempConsoles","i","platform","splice","ListItem","split","year","month","day","imageStyle","backgroundImage","setBackgroundImage","style","backgroundSize","backgroundPosition","Number","SearchResult","options","setOptions","selection","setSelection","quickAdd","SearchResults","quickAddOptions","setQuickAddOptions","quickAddSelection","setQuickAddSelection","htmlFor","data","itemConsoles","slug","platforms","released","GameListItem","copyInputVisible","setCopyInputVisible","changeArgs","listIndex","gameInfo","copyClickHandler","listName","changeItem","GameList","params","listData","setListData","setInput","fetch","join","then","response","json","results","setData","toggleSearch","catch","err","placeholder","Header","showSearch","setShowSearch","toggleMobileSearch","setSidebar","defaultLists","App","window","localStorage","getItem","setCurrentPage","searchData","setSearchData","searchInput","setSearchInput","setLists","setShowSidebar","setItem","setGamesList","addGameToList","gameName","newLists","gameList","forEach","changeGameListItem","command","newList","filteredList","changingItem","newGameList","moveItem","direction","list","addNewList","trimmedName","trim","listNames","toLowerCase","createNewList","basename","listContents","newName","mergingLists","listIndexToMerge","mergedList","mergedListIndex","combinedContents","Set","changingList","exact","path","gameTitle","render","href","rel","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a9433bb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Delete_icon_modal.ed50bad7.svg\";","module.exports = __webpack_public_path__ + \"static/media/gear.dc461297.svg\";","module.exports = __webpack_public_path__ + \"static/media/Delete_icon_rating.cbf5b388.svg\";","module.exports = __webpack_public_path__ + \"static/media/Delete_icon.6a12383b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Up_arrow.3494b1fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Down_arrow.08cc8dc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hamburger_icon.54ebc46a.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.f8366a62.svg\";","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.scss';\r\n\r\nconst Home = (props) => {\r\n    useEffect(() => {\r\n        props.changeHighlight('');\r\n    }, [props]);\r\n\r\n    return (\r\n        <div id='home-container'>\r\n            <h2>Add video games to lists!</h2>\r\n            <h3>Your Lists:</h3>\r\n            <ul>\r\n                {props.lists.map(item => {\r\n                    return (\r\n                        <Link to={`/${item.linkRoute}`} key={item.name}>\r\n                            <li>{item.name}</li>\r\n                        </Link>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <hr />\r\n            <p id=\"image-note\"><strong>Note: </strong>Due to the size of images generated by RAWG.io for list tile backgrounds, it is suggested that you turn images off if you're on a mobile device. This option is found in the sidebar menu.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Modal.scss';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className={`modal ${props.showModal ? 'visible' : null}`} onClick={props.hideModal}>\r\n            <div className={`modal-container ${props.modalClass}`} onClick={e => e.stopPropagation()}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './ConfirmationModal.scss';\r\n\r\nconst ConfirmationModal = (props) => {\r\n    return (\r\n        <>\r\n            <p>{props.message}</p>\r\n            <div className='button-container'>\r\n                <button onClick={() => { props.hide(); props.func(props.funcArgs); }}>Yes</button>\r\n                <button onClick={props.hide}>No</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useState } from 'react';\r\n\r\nconst TextInput = (props) => {\r\n    const [showInput, setShowInput] = useState(false);\r\n    const [value, setValue] = useState(props.standardInput !== undefined ? props.standardInput : '');\r\n    const [validInput, setValidInput] = useState(true);\r\n\r\n    const changeHandler = (e) => {\r\n        setValue(e.target.value);\r\n\r\n        if (e.target.value.indexOf('/') !== -1 || e.target.value.indexOf('\\\\') !== -1) {\r\n            setValidInput(false);\r\n        } else {\r\n            setValidInput(true);\r\n        }\r\n    };\r\n\r\n    const submit = (args) => {\r\n        if (!validInput) { return }\r\n\r\n        setShowInput(false);\r\n        setValue('');\r\n\r\n        if (args !== undefined) {\r\n            props.inputFunction(value, args);\r\n        } else {\r\n            props.inputFunction(value);\r\n        }\r\n    }\r\n\r\n    const inputVisibility = () => {\r\n        setShowInput(!showInput);\r\n    };\r\n\r\n    const input = (\r\n        <form onSubmit={e => { e.preventDefault(); submit(props.args); }}>\r\n            <input className={!validInput && 'invalid'} id={props.id} type=\"text\" value={value} onChange={changeHandler} autoFocus></input>\r\n            <input type=\"submit\" value=\"Submit\"></input>\r\n            {validInput ? null : <p class=\"invalid-text\">Invalid Input: Cannot use / or \\ in list name!</p>}\r\n        </form>\r\n    );\r\n    return (\r\n        <div>\r\n            <button onClick={inputVisibility}>{showInput ? 'Cancel' : props.text}</button>\r\n            {showInput ? input : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal'; \r\nimport { withRouter } from 'react-router-dom';\r\nimport TextInput from '../TextInput/TextInput';\r\n\r\nconst ListModalItem = (props) => {\r\n    const [mergeInputVisible, setMergeInputVisible] = useState(false);\r\n    const [mergeOptions, setMergeOptions] = useState([]);\r\n    const [mergeSelection, setMergeSelection] = useState('');\r\n    const [showMerge, setShowMerge] = useState(false);\r\n\r\n    const renameList = (name, index) => {\r\n        if (String(document.URL.match(/[^/]+(?=\\/$|$)/)) === props.lists[index].linkRoute) {\r\n\t\t    props.history.push('/');\r\n        }\r\n        props.rename(name, index);\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setMergeSelection(e.target.value);\r\n    };\r\n\r\n    const mergeClickHandler = () => {\r\n        setMergeInputVisible(!mergeInputVisible);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempList = [...props.lists].filter(item => {\r\n            return item.name !== props.name;\r\n        });\r\n        setMergeOptions(tempList.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n        setMergeSelection('---');\r\n    }, [props.lists, props.name]);\r\n\r\n    const hideMergeConfirmation = () => {\r\n        setShowMerge(false);\r\n    };\r\n\r\n    const showMergeConfirmation = () => {\r\n        setShowMerge(mergeSelection !== '---' ? true : false);\r\n    };\r\n\r\n    const optionDisplay = (\r\n        <>\r\n            <select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {mergeOptions}\r\n            </select><br />\r\n            <button onClick={() => { showMergeConfirmation(); mergeClickHandler(); }}>Merge</button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <li key={props.name} className='modal-list-item'>\r\n                <h2>{props.name}</h2>\r\n                <div className=\"list-button-container\">\r\n                    <button onClick={() => { props.deleteIndex(props.index); props.showDelete(); }}>Delete List</button>\r\n                    <button onClick={() => props.moveList('up', props.index)}>Move Up</button>\r\n                    <button onClick={() => props.moveList('down', props.index)}>Move Down</button>\r\n                    <TextInput\r\n                        id='list-copy-input'\r\n                        text='Copy List'\r\n                        inputFunction={props.copy}\r\n                        args={props.contents}\r\n                    />\r\n                    <TextInput\r\n                        id='list-rename-input'\r\n                        text='Rename List'\r\n                        inputFunction={renameList}\r\n                        args={props.index}\r\n                        standardInput={props.name}\r\n                    />\r\n                    <div>\r\n                        <button onClick={mergeClickHandler}>{mergeInputVisible ? 'Cancel' : 'Merge Into'}</button><br />\r\n                        {mergeInputVisible ? optionDisplay : null}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <Modal modalClass={'merge-list'} showModal={showMerge} hideModal={hideMergeConfirmation}>\r\n                <ConfirmationModal\r\n                    message={`Are you sure you want to merge ${props.name} into ${mergeSelection}?`}\r\n                    func={props.merge} \r\n                    funcArgs={[props.index, mergeSelection]}\r\n                    hide={hideMergeConfirmation}\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ListModalItem);\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './ListModal.scss';\r\nimport Modal from '../Modal/Modal';\r\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\r\nimport ListModalItem from '../ListModalItem/ListModalItem';\r\nimport TextInput from '../TextInput/TextInput';\r\n\r\nconst ListModal = (props) => {\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(0);\r\n\r\n    const changeDeleteIndex = (index) => {\r\n        setDeleteIndex(index);\r\n    };\r\n\r\n    const showDeleteConfirmation = () => {\r\n        setShowDelete(true);\r\n    };\r\n\r\n    const hideDeleteConfirmation = () => {\r\n        setShowDelete(false);\r\n    };\r\n\r\n    const deleteItem = (index) => {\r\n        if (String(document.URL.match(/[^/]+(?=\\/$|$)/)) === props.lists[index].linkRoute) {\r\n\t\t    props.history.push('/');\r\n        }\r\n        props.delete(index);\r\n        hideDeleteConfirmation();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>List Manager</h1>\r\n            <p>Add, delete, copy, reorganize, and even rename lists here! Your one stop shop for video game list management!</p>\r\n            <button id=\"close-modal\" onClick={props.hideModal}><img src={require(\"../../images/Delete_icon_modal.svg\")} alt={'Close modal'} /></button>\r\n            <TextInput\r\n                id='add-list'\r\n                text='Add List'\r\n                inputFunction={props.add}\r\n            />\r\n            <ul id='modal-list-container'>\r\n                {props.lists.map(item => {\r\n                    return (\r\n                        <ListModalItem\r\n                            key={item.name}\r\n                            name={item.name}\r\n                            index={item.index}\r\n                            contents={item.contents}\r\n                            moveList={props.moveList}\r\n                            deleteIndex={changeDeleteIndex}\r\n                            showDelete={showDeleteConfirmation}\r\n                            copy={props.copy}\r\n                            merge={props.merge}\r\n                            rename={props.rename}\r\n                            lists={props.lists}\r\n                        />\r\n                    );\r\n                })}\r\n            </ul>\r\n            {showDelete ? (\r\n                <Modal modalClass={'delete-list'} showModal={showDelete} hideModal={hideDeleteConfirmation}>\r\n                    <ConfirmationModal\r\n                        message='Are you sure you want to delete this list?'\r\n                        func={deleteItem} \r\n                        funcArgs={deleteIndex}\r\n                        hide={hideDeleteConfirmation}\r\n                    />\r\n                </Modal>\r\n            ) : null} \r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ListModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Sidebar.scss';\r\nimport Modal from '../Modal/Modal';\r\nimport ListModal from '../ListModal/ListModal';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = (props) => {\r\n    const [navigation, setNavigation] = useState([]);\r\n    const [showListModal, setShowListModal] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setShowListModal(true);\r\n    };\r\n\r\n    const hideModal = () => {\r\n        setShowListModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setNavigation(props.lists.map(item => {\r\n            const linkName = item.linkRoute;\r\n            return (\r\n                <Link to={`/${linkName}`} key={item.name} onClick={() => {props.hide(); props.changeHighlight(linkName)}}>\r\n                    <li\r\n                        className={props.currentPage === linkName ? 'active' : null}\r\n                    >\r\n                        {`${item.name} [${item.contents.length}]`}\r\n                    </li>\r\n                </Link>\r\n            );\r\n        }));\r\n    }, [props.lists, props.hide, props.currentPage, props]);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"sidebar\" className={props.showSidebar ? 'visible' : null}>\r\n                <div id=\"manage-lists\" onClick={showModal}>\r\n                    <img src={require('../../images/gear.svg')} alt=\"\" /><p>Manage Lists</p>\r\n                </div>\r\n                <h2>Your Lists:</h2>\r\n                {props.lists.length === 0 ? <p>Add a list to see it here!</p> : \r\n                    <>\r\n                        <nav>\r\n                            <ul>\r\n                                {navigation}\r\n                            </ul>\r\n                        </nav> \r\n                    </>\r\n                }\r\n                <div id=\"show-images\">\r\n                    <p>Toggle Tile Images:</p>\r\n                    <div id=\"toggle\" onClick={() => props.setShowImages(!props.showImages)} className={props.showImages ? 'on' : 'off'}>\r\n                        <button id=\"toggle-button\"></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {showListModal ? (\r\n                <Modal modalClass={'list-modal'} showModal={showListModal} hideModal={hideModal}>\r\n                    <ListModal lists={props.lists} add={props.add} delete={props.delete} copy={props.copy} rename={props.rename} merge={props.merge} moveList={props.moveList} hideModal={hideModal}/>\r\n                </Modal>\r\n            ) : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Rating.scss';\r\n\r\nconst Rating = (props) => {\r\n    const [gameRating, setGameRating] = useState('-');\r\n    const [hoverValue, setHoverValue] = useState(gameRating || 0);\r\n\r\n    useEffect(() => {\r\n        setGameRating(() => {\r\n            if (props.games.hasOwnProperty(props.name)) {\r\n                return props.games[props.name].rating;\r\n            }\r\n        });\r\n\r\n        setHoverValue(() => {\r\n            if (props.games.hasOwnProperty(props.name)) {\r\n                return props.games[props.name].rating;\r\n            }\r\n        });\r\n    }, [props.games, props.name])\r\n    \r\n\r\n    const clickHandler = (number) => {\r\n        if (!props.games.hasOwnProperty(props.name)) {\r\n            props.addGameInfo(props.name, props.title, props.date, number, props.consoles, props.image);\r\n        } else {\r\n            const newGames = JSON.parse(JSON.stringify(props.games));\r\n            newGames[props.name].rating = number;\r\n            props.setGames(newGames);\r\n            setGameRating(() => {\r\n                if (props.games.hasOwnProperty(props.name)) {\r\n                    return props.games[props.name].rating;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"overall-rating-container\">\r\n            <div className='rating-container'>\r\n            {[0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5].map(item => {\r\n                return (\r\n                    <div\r\n                        key={item}\r\n                        className={item % 1 === 0 ? 'full' : 'half'}\r\n                        onMouseEnter={() => setHoverValue(item)}\r\n                        onMouseLeave={() => setHoverValue(gameRating)}\r\n                        onClick={() => clickHandler(item)}\r\n                    >\r\n                        <div\r\n                            className={`rating ${hoverValue >= item && 'rating-hover'}`}\r\n                        ></div>\r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <br />\r\n            <button onClick={() => {clickHandler(0)}}><img src={require('../../images/Delete_icon_rating.svg')} alt=\"Remove Rating\" /></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Consoles.scss';\r\n\r\nconst Consoles = (props) => {\r\n    const [hasStoredData, setHasStoredData] = useState(props.games.hasOwnProperty(props.name));\r\n    const [showWholeList, setShowWholeList] = useState(props.consoles === null ? false : props.consoles.length <= 5);\r\n    const needShortenedList = useState(props.consoles === null ? false : props.consoles.length > 5);\r\n\r\n    useEffect(() => {\r\n        setHasStoredData(props.games.hasOwnProperty(props.name));\r\n    }, [props]);\r\n\r\n    const changeListVisiblity = () => {\r\n        setShowWholeList(!showWholeList);\r\n    };\r\n\r\n    const onClickHandler = (index) => {\r\n        console.log(props.consoles);\r\n        const tempGames = JSON.parse(JSON.stringify(props.games));\r\n        if (!hasStoredData) {\r\n            const tempConsoles = [...props.consoles].map((item, i) => {\r\n                return {\r\n                    name: item.platform.name,\r\n                    owned: index === i\r\n                }\r\n            });\r\n            props.addGameInfo(props.name, props.title, props.date, null, tempConsoles, props.image);\r\n            setHasStoredData(true);\r\n        } else {\r\n            tempGames[props.name].consoles[index].owned = !tempGames[props.name].consoles[index].owned;\r\n            props.setGames(tempGames);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"consoles-list\">\r\n                {props.consoles === null ? null : (!needShortenedList || (needShortenedList && showWholeList)) ? props.consoles.map((item, index) => {\r\n                    const platform = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\r\n                    return (\r\n                        <li\r\n                            className={hasStoredData && item.owned ? 'owned' : null}\r\n                            onClick={() => onClickHandler(index)}\r\n                            key={platform}\r\n                        >{platform}</li>\r\n                    );\r\n                }) : [...props.consoles].splice(0, 5).map((item, index) => {\r\n                    const platform = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\r\n                    return (\r\n                        <li\r\n                            className={hasStoredData && item.owned ? 'owned' : null}\r\n                            onClick={() => onClickHandler(index)}\r\n                            key={platform}\r\n                        >{platform}</li>\r\n                    );\r\n                })}\r\n                {!needShortenedList[0] ? null : <li onClick={changeListVisiblity}>{!showWholeList ? '+' : '-'}</li>}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Consoles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Rating from '../Rating/Rating';\r\nimport Consoles from '../Consoles/Consoles';\r\nimport './ListItem.scss';\r\n\r\nconst ListItem = (props) => {\r\n    const monthName = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const [year, month, day] = props.date !== null ? props.date.split('-') : '';\r\n\r\n    const imageStyle = `linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.4)), url(${props.image})`;\r\n    const defaultStyle = 'linear-gradient(#8b91ae, #45456c)';\r\n\r\n    const [backgroundImage, setBackgroundImage] = useState(props.showImages ? imageStyle : defaultStyle);\r\n\r\n    useEffect(() => {\r\n        props.showImages ? setBackgroundImage(imageStyle) : setBackgroundImage(defaultStyle);\r\n    }, [props.showImages, imageStyle]);\r\n\r\n    const style = {\r\n        backgroundImage: backgroundImage,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 0px'\r\n    }\r\n\r\n    return (\r\n        <li style={style}>\r\n            <div className=\"list-item-header\">\r\n                <div>\r\n                    <h2>{props.title}</h2>\r\n                    <p>{props.date !== null ? `Released: ${monthName[Number(month)]} ${day}, ${year}` : ''}</p>\r\n                </div>\r\n                {props.hasOwnProperty('delete') ? <button onClick={props.delete}><img alt=\"Delete game from list\" src={require('../../images/Delete_icon.svg')}></img></button> : null}\r\n            </div>\r\n            <Rating {...props} />\r\n            <Consoles {...props} />\r\n            {props.children}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nconst SearchResult = (props) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [selection, setSelection] = useState('---');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelection(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOptions(props.lists.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n    }, [props.lists]);\r\n\r\n    return (\r\n        <ListItem {...props}>\r\n            <div className=\"add-container\">\r\n                <div className=\"add\">\r\n                    <select onChange={onChangeHandler}>\r\n                        <option>---</option>\r\n                        {options}\r\n                    </select>\r\n                    <button onClick={() => {props.add(props.name, selection); props.addGameInfo(props.name, props.title, props.date, props.rating, props.consoles, props.image);}}>Add</button>    \r\n                </div>\r\n                <button onClick={() => {props.add(props.name, props.quickAdd); props.addGameInfo(props.name, props.title, props.date, props.rating, props.consoles, props.image);}}>Quick Add</button>\r\n            </div>\r\n        </ListItem>\r\n    );  \r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SearchResult from '../SearchResult/SearchResult';\r\nimport './SearchResults.scss';\r\n\r\nconst SearchResults = (props) => {\r\n\tconst [quickAddOptions, setQuickAddOptions] = useState([]);\r\n\tconst [quickAddSelection, setQuickAddSelection] = useState('---');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setQuickAddSelection(e.target.value);\r\n    };\r\n\r\n\tuseEffect(() => {\r\n        props.changeHighlight('');\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        setQuickAddOptions(props.lists.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n    }, [props.lists]);\r\n\r\n    return (\r\n        <>\r\n\t\t\t<h1>Search</h1>\r\n\t\t\t<label htmlFor=\"quick-add\">Quick Add:</label>\r\n\t\t\t<select id=\"quick-add\" onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {quickAddOptions}\r\n            </select>\r\n            {props.data.length === 0 ? null : (\r\n                <>\r\n                    <ul id=\"search-results\">\r\n\t\t\t\t\t\t{props.data.map(item => {\r\n\t\t\t\t\t\t\tconst itemConsoles = props.games.hasOwnProperty(item.slug) ? props.games[item.slug].consoles : item.platforms;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SearchResult\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\tname={item.slug}\r\n\t\t\t\t\t\t\t\t\ttitle={item.name}\r\n\t\t\t\t\t\t\t\t\tdate={item.released}\r\n\t\t\t\t\t\t\t\t\tconsoles={itemConsoles}\r\n\t\t\t\t\t\t\t\t\tadd={props.add}\r\n\t\t\t\t\t\t\t\t\tlists={props.lists}\r\n\t\t\t\t\t\t\t\t\tgames={props.games}\r\n\t\t\t\t\t\t\t\t\tsetGames={props.setGames}\r\n\t\t\t\t\t\t\t\t\taddGameInfo={props.addGameInfo}\r\n\t\t\t\t\t\t\t\t\timage={item['background_image']}\r\n\t\t\t\t\t\t\t\t\tquickAdd={quickAddSelection}\r\n\t\t\t\t\t\t\t\t\tshowImages={props.showImages}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n                    </ul>\r\n                </>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nconst GameListItem = (props) => {\r\n    const [copyInputVisible, setCopyInputVisible] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [selection, setSelection] = useState('');\r\n    const changeArgs = [props.listIndex, props.index];\r\n    const gameInfo = props.games[props.name];\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelection(e.target.value);\r\n    };\r\n\r\n    const copyClickHandler = () => {\r\n        setCopyInputVisible(!copyInputVisible);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempList = [...props.lists].filter(item => {\r\n            return item.name !== props.listName;\r\n        });\r\n        setOptions(tempList.map(item => {\r\n            return <option key={item.name} value={item.name}>{item.name}</option>\r\n        }));\r\n        setSelection('---');\r\n    }, [props.lists, props.listName]);\r\n\r\n    const optionDisplay = (\r\n        <div>\r\n            <select onChange={onChangeHandler}>\r\n                <option>---</option>\r\n                {options}\r\n            </select>\r\n            <button className=\"add-button\" onClick={() => {props.add(props.name, selection); copyClickHandler();}}>Add</button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <ListItem games={props.games} setGames={props.setGames} name={props.name} title={props.title} date={props.date} rating={props.rating} consoles={props.games[props.name].consoles} image={gameInfo.image} delete={() => { props.changeItem('delete', ...changeArgs); }} showImages={props.showImages} >\r\n            <div className=\"alteration-container\">\r\n                <div className=\"copy\">\r\n                    <button onClick={copyClickHandler}>{!copyInputVisible ? 'Copy To Other List' : 'Cancel'}</button><br />\r\n                    {copyInputVisible ? optionDisplay : null}\r\n                </div>\r\n                <div className=\"move\">\r\n                    <button onClick={() => { props.changeItem('up', ...changeArgs); }}><img src={require('../../images/Up_arrow.svg')} alt=\"Move List Up\"/></button><br />\r\n                    <button onClick={() => { props.changeItem('down', ...changeArgs); }}><img src={require('../../images/Down_arrow.svg')} alt=\"Move List Down\"/></button>\r\n                </div>\r\n            </div> \r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default GameListItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GameListItem from '../GameListItem/GameListItem';\r\n\r\nconst GameList = (props) => {\r\n    const [listData, setListData] = useState(props.lists.filter(item => {\r\n        return item.linkRoute === props.match.params.name;\r\n    })[0]);\r\n\r\n    useEffect(() => {\r\n        setListData(props.lists.filter(item => {\r\n            return item.linkRoute === props.match.params.name;\r\n        })[0]);\r\n    }, [props.match, props.lists]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{listData.name}</h1>\r\n            {listData.contents.length === 0 ? <p>There are no games here! Search for games to start filling this list out!</p> : null}\r\n            <ul id=\"game-list\">\r\n                {[...listData.contents].map(item => {\r\n                    return <GameListItem \r\n                        key={item.name}\r\n                        name={item.name}\r\n                        title={props.games[item.name].name}\r\n                        index={item.index}\r\n                        image={item['background-image']}\r\n                        lists={props.lists}\r\n                        date={props.games[item.name].date}\r\n                        games={props.games}\r\n                        listName={listData.name}\r\n                        listIndex={listData.index}\r\n                        changeItem={props.changeItem}\r\n                        add={props.add}\r\n                        setGames={props.setGames}\r\n                        showImages={props.showImages}\r\n                    />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameList;\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Searchbar = (props) => {\r\n\tconst [input, setInput] = useState('');\r\n\r\n\tconst searchSubmitHandler = () => {\r\n\t\tfetch(`https://api.rawg.io/api/games?search=${input.split(' ').join('-')}`, {\r\n\t\t\t\"method\": \"GET\",\r\n\t\t\t\"headers\": {\r\n\t\t\t\t\"User-Agent\": \"https://github.com/Flakari/vg-lists/\"\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.results.map(item => item.released));\r\n\t\t\t\tprops.setData(response.results);\r\n\t\t\t\tif (props.hasOwnProperty('toggleSearch')) props.toggleSearch();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\tprops.history.push('/search');\r\n\t}\r\n\r\n\tconst inputChangeHandler = (input) => {\r\n\t\tsetInput(input.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={e => { e.preventDefault(); searchSubmitHandler(); }}>\r\n\t\t\t<input type=\"text\" onChange={inputChangeHandler} value={input} placeholder='Search' />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default withRouter(Searchbar);\r\n","import React, { useState } from 'react';\r\nimport './Header.scss';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const [showSearch, setShowSearch] = useState(false);\r\n\r\n    const toggleMobileSearch = () => {\r\n        setShowSearch(!showSearch);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <button onClick={props.setSidebar}><img src={require(\"../../images/Hamburger_icon.svg\")} alt=\"Toggle Lists\"></img></button>\r\n                <Link to='/'>VG Lists</Link>\r\n                <div id=\"search-container\">\r\n                    <Searchbar setData={props.setData} />\r\n                </div>\r\n                <button onClick={toggleMobileSearch}><img src={require(\"../../images/magnifying-glass.svg\")} alt=\"Search\"></img></button>\r\n            </header>\r\n            <div id=\"mobile-search-container\" className={showSearch ? 'visible': null}>\r\n                <Searchbar setData={props.setData} toggleSearch={toggleMobileSearch}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport GameList from './components/GameList/GameList';\nimport Header from './components/Header/Header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst defaultLists = [\n\t{ name: 'Owned', linkRoute: 'owned', contents: [], index: 0 },\n\t{ name: 'Completed', linkRoute: 'completed', contents: [], index: 1 },\n\t{ name: 'Currently Playing', linkRoute: 'currently-playing', contents: [], index: 2 },\n\t{ name: 'Wishlist', linkRoute: 'wishlist', contents: [], index: 3 },\n\t{ name: 'Backlog', linkRoute: 'backlog', contents: [], index: 4 }\n];\n\nconst App = () => {\n\tconst [showImages, setShowImages] = useState(\n\t\twindow.localStorage && window.localStorage.getItem('showImages') ?\n\t\t\tJSON.parse(window.localStorage.getItem('showImages')) : true);\n\tconst [currentPage, setCurrentPage] = useState(String(document.URL.match(/[^/]+(?=\\/$|$)/)));\n\tconst [searchData, setSearchData] = useState('');\n\tconst [searchInput, setSearchInput] = useState('');\n\tconst [lists, setLists] = useState(\n\t\twindow.localStorage && window.localStorage.getItem('lists') ?\n\t\t\tJSON.parse(window.localStorage.getItem('lists')) : defaultLists);\n\tconst [games, setGames] = useState(\n\t\twindow.localStorage && window.localStorage.getItem('games') ?\n\t\t\tJSON.parse(window.localStorage.getItem('games')) : {});\n\tconst [showSidebar, setShowSidebar] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (window.localStorage && !window.localStorage.getItem('lists')) {\n\t\t\twindow.localStorage.setItem('lists', JSON.stringify(defaultLists));\n\t\t}\n\n\t\tif (window.localStorage && !window.localStorage.getItem('games')) {\n\t\t\twindow.localStorage.setItem('games', JSON.stringify([]));\n\t\t}\n\n\t\tif (window.localStorage && !window.localStorage.getItem('showImages')) {\n\t\t\twindow.localStorage.setItem('showImages', JSON.stringify(true));\n\t\t}\n\t}, []);\n\n\tconst showListImages = (value) => {\n\t\tif (window.localStorage && window.localStorage.getItem('showImages')) {\n\t\t\twindow.localStorage.setItem('showImages', JSON.stringify(value));\n\t\t\tsetShowImages(JSON.parse(window.localStorage.getItem('showImages')));\n\t\t} else {\n\t\t\tsetShowImages(value);\n\t\t}\n\t}\n\n\tconst changeHighlight = (value) => {\n\t\tsetCurrentPage(value);\n\t}\n\n\tconst setListData = (lists) => {\n\t\tif (window.localStorage && window.localStorage.getItem('lists')) {\n\t\t\twindow.localStorage.setItem('lists', JSON.stringify(lists));\n\t\t\tsetLists(JSON.parse(window.localStorage.getItem('lists')));\n\t\t} else {\n\t\t\tsetLists(lists);\n\t\t}\n\t};\n\n\tconst setData = (data) => {\n\t\tsetSearchData(data);\n\t};\n\n\tconst setInput = (input) => {\n\t\tsetSearchInput(input);\n\t};\n\n\tconst setGamesList = (games) => {\n\t\tif (window.localStorage && window.localStorage.getItem('games')) {\n\t\t\twindow.localStorage.setItem('games', JSON.stringify(games));\n\t\t\tsetGames(JSON.parse(window.localStorage.getItem('games')));\n\t\t} else {\n\t\t\tsetGames(games);\n\t\t}\n\t};\n\n\tconst setSidebarVisibility = () => {\n\t\tsetShowSidebar(!showSidebar);\n\t};\n\n\tconst hideSidebar = () => {\n\t\tsetShowSidebar(false);\n\t};\n\n\tconst addGameToList = (gameName, listName) => {\n\t\tconst newLists = JSON.parse(JSON.stringify(lists));\n\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tif (newLists[i].name === listName) {\n\t\t\t\tconst gameList = [];\n\t\t\t\tnewLists[i].contents.forEach(item => {\n\t\t\t\t\tgameList.push(item.name);\n\t\t\t\t});\n\n\t\t\t\tif (gameList.indexOf(gameName) === -1) {\n\t\t\t\t\tnewLists[i].contents.push({ name: gameName, index: newLists[i].contents.length });\n\t\t\t\t\tsetListData(newLists);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst addGameInformation = (gameName, gameTitle, date, rating, consoles, image) => {\n\t\tconst newGames = JSON.parse(JSON.stringify(games));\n\t\tconst tempConsoles = [];\n\t\tconsoles.forEach(item => {\n\t\t\tconst name = !item.hasOwnProperty('platform') ? item.name : item.platform.name;\n\t\t\ttempConsoles.push({\n\t\t\t\tname: name,\n\t\t\t\towned: item.hasOwnProperty('owned') ? item.owned : false\n\t\t\t});\n\t\t});\n\n\t\tif (newGames[gameName] === undefined) {\n\t\t\tnewGames[gameName] = {\n\t\t\t\tname: gameTitle,\n\t\t\t\tdate: date,\n\t\t\t\tconsoles: tempConsoles,\n\t\t\t\trating: rating || null,\n\t\t\t\timage: image\n\t\t\t}\n\t\t\tsetGamesList(newGames);\n\t\t}\n\t};\n\n\tconst changeGameListItem = (command, listIndex, index) => {\n\t\tif ((command === 'up' && index === 0) || (command === 'down' && index === lists.length - 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newList = JSON.parse(JSON.stringify(lists));\n\t\tlet filteredList = newList[listIndex];\n\n\t\t// Grabs list item based on index value\n\t\tconst changingItem = filteredList.contents.splice(index, 1)[0];\n\n\t\t// Runs function based on command\n\t\tif (command === 'up' || command === 'down') {\n\t\t\tlet newGameList = moveItem(command, filteredList.contents, changingItem, index);\n\t\t\tfilteredList.contents = newGameList;\n\t\t}\n\n\t\t// Resets index values of game list\n\t\tfor (let i = 0; i < filteredList.contents.length; i++) {\n\t\t\tfilteredList.contents[i].index = i;\n\t\t}\n\t\tnewList[listIndex].contents = filteredList.contents;\n\t\tsetListData(newList);\n\t};\n\n\tconst moveList = (direction, index) => {\n\t\tif ((direction === 'up' && index === 0) || (direction === 'down' && index === lists.length - 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newLists = JSON.parse(JSON.stringify(lists));\n\t\tconst changingList = newLists.splice(index, 1)[0];\n\t\tnewLists = moveItem(direction, newLists, changingList, index);\n\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tnewLists[i].index = i;\n\t\t}\n\t\tsetListData(newLists);\n\t};\n\n\tconst moveItem = (direction, list, item, index) => {\n\t\tif (direction === 'up' && index > 0) {\n\t\t\tlist.splice(index - 1, 0, item);\n\t\t} else if (direction === 'down' && index < list.length) {\n\t\t\tlist.splice(index + 1, 0, item);\n\t\t} else {\n\t\t\tlist.splice(index, 0, item);\n\t\t}\n\t\treturn list;\n\t};\n\n\tconst createNewList = (name, contents) => {\n\t\tconst trimmedName = name.trim();\n\n\t\treturn ({\n\t\t\tname: trimmedName,\n\t\t\tlinkRoute: trimmedName.toLowerCase().split(' ').join('-'),\n\t\t\tcontents: contents || [],\n\t\t\tindex: lists.length\n\t\t});\n\t};\n\n\tconst addNewList = (name, contents) => {\n\t\tconst trimmedName = name.trim();\n\n\t\tif (trimmedName === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst listNames = [];\n\t\tlists.forEach(item => {\n\t\t\tlistNames.push(item.name.toLowerCase());\n\t\t});\n\n\t\tif (listNames.indexOf(trimmedName.toLowerCase()) === -1) {\n\t\t\tconst newLists = [...lists];\n\t\t\tnewLists.push(createNewList(name, contents));\n\t\t\tsetListData(newLists);\n\t\t}\n\t};\n\n\tconst deleteList = (index) => {\n\t\tconst newLists = [...lists];\n\t\tnewLists.splice(index, 1);\n\n\t\tfor (let i = 0; i < newLists.length; i++) {\n\t\t\tnewLists[i].index = i;\n\t\t}\n\n\t\tsetListData(newLists);\n\t};\n\n\tconst copyList = (name, listContents) => {\n\t\taddNewList(name, listContents);\n\t};\n\n\tconst renameList = (newName, index) => {\n\t\tconst trimmedName = newName.trim();\n\n\t\tif (trimmedName === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newLists = [...lists];\n\n\t\tnewLists[index].name = trimmedName;\n\t\tnewLists[index].linkRoute = trimmedName.toLowerCase().split(' ').join('-');\n\t\tsetListData(newLists);\n\t};\n\n\tconst mergeLists = (mergingLists) => {\n\t\tconst [listIndexToMerge, mergedList] = mergingLists;\n\t\tlet mergedListIndex = 0;\n\t\tlet newLists = JSON.parse(JSON.stringify(lists));\n\t\tlet combinedContents = new Set();\n\n\t\tfor (let list of newLists) {\n\t\t\tif (list.name === mergedList) {\n\t\t\t\tmergedListIndex = list.index;\n\t\t\t}\n\t\t}\n\n\t\tfor (let item of newLists[mergedListIndex].contents) {\n\t\t\tcombinedContents.add(item.name);\n\t\t}\n\n\t\tfor (let item of newLists[listIndexToMerge].contents) {\n\t\t\tcombinedContents.add(item.name);\n\t\t}\n\n\t\tnewLists[mergedListIndex].contents = [...combinedContents].map((item, index) => {\n\t\t\treturn {\n\t\t\t\tname: item,\n\t\t\t\tindex: index\n\t\t\t};\n\t\t});\n\n\t\tsetListData(newLists);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router basename='/vg-lists'>\n\t\t\t\t<Header setData={setData} setSidebar={setSidebarVisibility} />\n\t\t\t\t<Sidebar\n\t\t\t\t\tlists={lists}\n\t\t\t\t\tadd={addNewList}\n\t\t\t\t\tdelete={deleteList}\n\t\t\t\t\tcopy={copyList}\n\t\t\t\t\trename={renameList}\n\t\t\t\t\tmerge={mergeLists}\n\t\t\t\t\tshowSidebar={showSidebar}\n\t\t\t\t\thide={hideSidebar}\n\t\t\t\t\tmoveList={moveList}\n\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\tchangeHighlight={changeHighlight}\n\t\t\t\t\tshowImages={showImages}\n\t\t\t\t\tsetShowImages={showListImages}\n\t\t\t\t/>\n\t\t\t\t<div id=\"main-container\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Home lists={lists} changeHighlight={changeHighlight} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/search\">\n\t\t\t\t\t\t\t<SearchResults\n\t\t\t\t\t\t\t\tlists={lists}\n\t\t\t\t\t\t\t\tgames={games}\n\t\t\t\t\t\t\t\tadd={addGameToList}\n\t\t\t\t\t\t\t\tdata={searchData}\n\t\t\t\t\t\t\t\tsetData={setData}\n\t\t\t\t\t\t\t\tsearchInput={searchInput}\n\t\t\t\t\t\t\t\tsetInput={setInput}\n\t\t\t\t\t\t\t\tsetGames={setGamesList}\n\t\t\t\t\t\t\t\taddGameInfo={addGameInformation}\n\t\t\t\t\t\t\t\tchangeHighlight={changeHighlight}\n\t\t\t\t\t\t\t\tshowImages={showImages}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/:name\"\n\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t<GameList\n\t\t\t\t\t\t\t\t\tchangeItem={changeGameListItem}\n\t\t\t\t\t\t\t\t\tlists={lists}\n\t\t\t\t\t\t\t\t\tadd={addGameToList}\n\t\t\t\t\t\t\t\t\tgames={games}\n\t\t\t\t\t\t\t\t\tsetGames={setGamesList}\n\t\t\t\t\t\t\t\t\tshowImages={showImages}\n\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t<footer>All data gathered from RAWG - <a href=\"https://www.rawg.io\" target=\"_blank\" rel=\"noopener noreferrer\">RAWG.io</a></footer>\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}